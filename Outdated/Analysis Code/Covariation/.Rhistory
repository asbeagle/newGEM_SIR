add=FALSE)
abline(a=50, b=-0.5, col=1, lwd=2)
abline(a=100, b=-2, col=2, lwd=2)
abline(h=0, col=2, lwd=2)
abline(v=0, col=1, lwd=2)
findEquilibrium(LVcomp, y0=c(100,0), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(0,100), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(35,35), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(0,0), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
legend(x='topright', c(expression(N[1]~~"nullcline"),"N2 nullcline"), lwd=2, col=c(1,2), bty='n')
par(mar=c(4.5,4.5,1,1), oma=rep(0,4))
flowField(LVcomp,
xlim=c(0,100),
ylim=c(0,100),
parameters=pars,
system="two.dim",
state.names=c(expression(N[1]),"N2"),
add=FALSE)
abline(a=50, b=-0.5, col=1, lwd=2)
abline(a=100, b=-2, col=2, lwd=2)
abline(h=0, col=2, lwd=2)
abline(v=0, col=1, lwd=2)
findEquilibrium(LVcomp, y0=c(100,0), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(0,100), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(35,35), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(0,0), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
legend(x='topright', c(expression(N[1]~~"nullcline"),expression(N[2]~~"nullcline")), lwd=2, col=c(1,2), bty='n')
par(mar=c(4.5,4.5,1,1), oma=rep(0,4))
flowField(LVcomp,
xlim=c(0,100),
ylim=c(0,100),
parameters=pars,
system="two.dim",
state.names=c(expression(N[1]),expression(N[2])),
add=FALSE)
abline(a=50, b=-0.5, col=1, lwd=2)
abline(a=100, b=-2, col=2, lwd=2)
abline(h=0, col=2, lwd=2)
abline(v=0, col=1, lwd=2)
findEquilibrium(LVcomp, y0=c(100,0), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(0,100), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(35,35), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(0,0), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
legend(x='topright', c(expression(N[1]~~"nullcline"),expression(N[2]~~"nullcline")), lwd=2, col=c(1,2), bty='n')
?flowField
par(mar=c(4.5,4.5,1,1), oma=rep(0,4))
flowField(LVcomp,
xlim=c(0,100),
ylim=c(0,100),
parameters=pars,
system="two.dim",
col='black',
state.names=c(expression(N[1]),expression(N[2])),
add=FALSE)
abline(a=50, b=-0.5, col=1, lwd=2)
abline(a=100, b=-2, col=2, lwd=2)
abline(h=0, col=2, lwd=2)
abline(v=0, col=1, lwd=2)
findEquilibrium(LVcomp, y0=c(100,0), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(0,100), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(35,35), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(0,0), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
legend(x='topright', c(expression(N[1]~~"nullcline"),expression(N[2]~~"nullcline")), lwd=2, col=c(1,2), bty='n')
par(mar=c(4.5,4.5,1,1), oma=rep(0,4))
flowField(LVcomp,
xlim=c(0,100),
ylim=c(0,100),
parameters=pars,
system="two.dim",
col='black',
state.names=c(expression(N[1]),expression(N[2])),
add=FALSE)
abline(a=50, b=-0.5, col=1, lwd=2)
abline(a=100, b=-2, col=2, lwd=2)
abline(h=0, col=2, lwd=2)
abline(v=0, col=1, lwd=2)
findEquilibrium(LVcomp, y0=c(100,0), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(0,100), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(35,35), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
findEquilibrium(LVcomp, y0=c(0,0), parameters=pars, system="two.dim", plot.it=TRUE, summary=FALSE)
legend(x='topright', c(expression(N[1]~~"nullcline"),expression(N[2]~~"nullcline")), lwd=2, col=c(1,2))
knitr::opts_chunk$set(echo = FALSE,
dev=c('png','tiff'),
fig.path='figures/')
full_model = function(t, y, params) {
s1 <- params["s1"]
s2 <- params["s2"]
b1 <- params["b1"]
b2 <- params["b2"]
I12 <- params["I12"]
I21 <- params["I21"]
S1 <- params["S1"]
S2 <- params["S2"]
m <- params["m"]
c1 <- params["c1"]
c2 <- params["c2"]
C1 <- params["C1"]
C2 <- params["C2"]
bp <- params["bp"]
Kp <- params["Kp"]
a <- params["a"]
T1 <- y[1]
T2 <- y[2]
P <- y[3]
dT1 <- b1 + c1*P/(C1+P) + s1*T1^2/(S1^2+T1^2) * I12/(I12+T2) - m*T1
dT2 <- b2 + c2*P/(C2+P) + s2*T2^2/(S2^2+T2^2) * I21/(I21+T1) - m*T2
dP <- bp*P*(1-P/Kp) - a*T2*P
list(c(dT1, dT2, dP))
}
T2P_cline_model = function(t, y, params) {
s1 <- params["s1"]
s2 <- params["s2"]
b1 <- params["b1"]
b2 <- params["b2"]
I12 <- params["I12"]
I21 <- params["I21"]
S1 <- params["S1"]
S2 <- params["S2"]
m <- params["m"]
c1 <- params["c1"]
c2 <- params["c2"]
C1 <- params["C1"]
C2 <- params["C2"]
bp <- params["bp"]
Kp <- params["Kp"]
a <- params["a"]
T1 <- params["T1"]
T2 <- y[1]
P <- y[2]
dT2 <- b2 + c2*P/(C2+P) + s2*T2^2/(S2^2+T2^2) * I21/(I21+T1) - m*T2
dP <- bp*P*(1-P/Kp) - a*T2*P
list(c(dT2, dP))
}
T1T2_cline_model = function(t, y, params) {
s1 <- params["s1"]
s2 <- params["s2"]
b1 <- params["b1"]
b2 <- params["b2"]
I12 <- params["I12"]
I21 <- params["I21"]
S1 <- params["S1"]
S2 <- params["S2"]
m <- params["m"]
c1 <- params["c1"]
c2 <- params["c2"]
C1 <- params["C1"]
C2 <- params["C2"]
bp <- params["bp"]
Kp <- params["Kp"]
a <- params["a"]
P <- params["P"]
T1 <- y[1]
T2 <- y[2]
dT1 <- b1 + c1*P/(C1+P) + s1*T1^2/(S1^2+T1^2) * I12/(I12+T2) - m*T1
dT2 <- b2 + c2*P/(C2+P) + s2*T2^2/(S2^2+T2^2) * I21/(I21+T1) - m*T2
list(c(dT1, dT2))
}
## Strong negative feedbacks
params = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=50, c2=500, C1=50, C2=50, bp=4,Kp=300, a=0.006)
library(deSolve)
## Start Th1 biased
out10 <- ode(y=c(T1=800,T2=500,P=10), times=seq(0,50,0.1), full_model, params)
out20 <- ode(y=c(T1=800,T2=500,P=20), times=seq(0,50,0.1), full_model, params)
out40 <- ode(y=c(T1=800,T2=500,P=40), times=seq(0,50,0.1), full_model, params)
out80 <- ode(y=c(T1=800,T2=500,P=80), times=seq(0,50,0.1), full_model, params)
## Start Th2 biased
out10.2 <- ode(y=c(T1=500,T2=800,P=10), times=seq(0,50,0.1), full_model, params)
out20.2 <- ode(y=c(T1=500,T2=800,P=20), times=seq(0,50,0.1), full_model, params)
out40.2 <- ode(y=c(T1=500,T2=800,P=40), times=seq(0,50,0.1), full_model, params)
out80.2 <- ode(y=c(T1=500,T2=800,P=80), times=seq(0,50,0.1), full_model, params)
## Strong chronicity-promoting feedbacks
params = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=50, c2=130, C1=50, C2=50, bp=4,Kp=300, a=0.004)
## Start Th1 biased
out10.3 <- ode(y=c(T1=800,T2=500,P=10), times=seq(0,50,0.1), full_model, params)
out20.3 <- ode(y=c(T1=800,T2=500,P=20), times=seq(0,50,0.1), full_model, params)
out40.3 <- ode(y=c(T1=800,T2=500,P=40), times=seq(0,50,0.1), full_model, params)
out80.3 <- ode(y=c(T1=800,T2=500,P=80), times=seq(0,50,0.1), full_model, params)
## Start Th2 biased
out10.4 <- ode(y=c(T1=500,T2=800,P=10), times=seq(0,50,0.1), full_model, params)
out20.4 <- ode(y=c(T1=500,T2=800,P=20), times=seq(0,50,0.1), full_model, params)
out40.4 <- ode(y=c(T1=500,T2=800,P=40), times=seq(0,50,0.1), full_model, params)
out80.4 <- ode(y=c(T1=500,T2=800,P=80), times=seq(0,50,0.1), full_model, params)
## Strong clearance-promoting feedbacks
params.2 = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=700, c2=0, C1=50, C2=50, bp=4, Kp=250, a=0.004)
## start Th1 biased
out10.5 <- ode(y=c(T1=600,T2=400,P=10), times=seq(0,500,0.1), full_model, params.2)
## start Th1 biased
out10.5 <- ode(y=c(T1=600,T2=400,P=10), times=seq(0,500,0.1), full_model, params.2)
out20.5 <- ode(y=c(T1=600,T2=400,P=20), times=seq(0,50,0.1), full_model, params.2)
out20.5 <- ode(y=c(T1=600,T2=400,P=20), times=seq(0,50,0.1), full_model, params.2)
out40.5 <- ode(y=c(T1=600,T2=400,P=40), times=seq(0,50,0.1), full_model, params.2)
out80.5 <- ode(y=c(T1=600,T2=400,P=80), times=seq(0,50,0.1), full_model, params.2)
## start Th2 biased
out10.6 <- ode(y=c(T1=0,T2=800,P=10), times=seq(0,500,0.1), full_model, params.2)
## start Th2 biased
out10.6 <- ode(y=c(T1=0,T2=800,P=10), times=seq(0,500,0.1), full_model, params.2)
out20.6 <- ode(y=c(T1=0,T2=800,P=20), times=seq(0,50,0.1), full_model, params.2)
out20.6 <- ode(y=c(T1=0,T2=800,P=20), times=seq(0,50,0.1), full_model, params.2)
out40.6 <- ode(y=c(T1=0,T2=800,P=40), times=seq(0,50,0.1), full_model, params.2)
out80.6 <- ode(y=c(T1=0,T2=800,P=80), times=seq(0,50,0.1), full_model, params.2)
## Strong negative feedbacks - always acute
params = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=50, c2=500, C1=50, C2=50, bp=4,Kp=300, a=0.006)
out10.1 <- ode(y=c(T1=600,T2=600,P=10), times=seq(0,40,0.1), full_model, params)
out20.1 <- ode(y=c(T1=600,T2=600,P=20), times=seq(0,40,0.1), full_model, params)
out40.1 <- ode(y=c(T1=600,T2=600,P=40), times=seq(0,40,0.1), full_model, params)
out80.1 <- ode(y=c(T1=600,T2=600,P=80), times=seq(0,40,0.1), full_model, params)
## Acute to chronic
params = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=50, c2=150, C1=50, C2=50, bp=3, Kp=300, a=0.003)
out10.2 <- ode(y=c(T1=770,T2=430,P=10), times=seq(0,40,0.1), full_model, params)
out20.2 <- ode(y=c(T1=770,T2=430,P=20), times=seq(0,40,0.1), full_model, params)
out40.2 <- ode(y=c(T1=770,T2=430,P=40), times=seq(0,40,0.1), full_model, params)
out80.2 <- ode(y=c(T1=770,T2=430,P=80), times=seq(0,40,0.1), full_model, params)
## Chronic to acute
params = c(S1=1000, S2=1000, s1=2000, s2=2000, b1=0.1, b2=0.1, I12=10000, I21=10000, m=0.9, c1=150, c2=50, C1=50, C2=50, bp=3, Kp=300, a=0.003)
out10.3 <- ode(y=c(T1=530,T2=670,P=10), times=seq(0,40,0.1), full_model, params)
out20.3 <- ode(y=c(T1=530,T2=670,P=20), times=seq(0,40,0.1), full_model, params)
out40.3 <- ode(y=c(T1=530,T2=670,P=40), times=seq(0,40,0.1), full_model, params)
out80.3 <- ode(y=c(T1=530,T2=670,P=80), times=seq(0,40,0.1), full_model, params)
par(mfrow=c(3,3), mar=c(2.5,5,1,1), oma=c(3,0.5,0.5,0.5))
par(mfrow=c(3,3), mar=c(2.5,5,1,1), oma=c(3,0.5,0.5,0.5))
## Strong negative feedbacks - always acute
plot(out10.1[1:101,c(1,4)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,100), cex.axis=1.5)
mtext(side=2, line=3.5, "Parasite biomass", cex=1.5)
lines(out20.1[1:101,c(1,4)], lwd=3, col=gray(0.5))
lines(out40.1[1:101,c(1,4)], lwd=3, col=gray(0.3))
lines(out80.1[1:101,c(1,4)], lwd=3, col=gray(0.1))
legend(x='topright', legend=c("Dose=10","Dose=20","Dose=40","Dose=80"),fill=c(gray(0.7),gray(0.5),gray(0.3),gray(0.1)), bty='n', cex=2)
plot(out10.1[1:101,c(1,3)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th2 response", cex=1.5)
lines(out20.1[1:101,c(1,3)], lwd=3, col=gray(0.5))
lines(out40.1[1:101,c(1,3)], lwd=3, col=gray(0.3))
lines(out80.1[1:101,c(1,3)], lwd=3, col=gray(0.1))
plot(out10.1[1:101,c(1,2)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th1 response", cex=1.5)
lines(out20.1[1:101,c(1,2)], lwd=3, col=gray(0.5))
lines(out40.1[1:101,c(1,2)], lwd=3, col=gray(0.3))
lines(out80.1[1:101,c(1,2)], lwd=3, col=gray(0.1))
## Acute to chronic
plot(out10.2[1:301,c(1,4)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,250), cex.axis=1.5)
mtext(side=2, line=3.5, "Parasite biomass", cex=1.5)
lines(out20.2[1:301,c(1,4)], lwd=3, col=gray(0.5))
lines(out40.2[1:301,c(1,4)], lwd=3, col=gray(0.3))
lines(out80.2[1:301,c(1,4)], lwd=3, col=gray(0.1))
plot(out10.2[1:301,c(1,3)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th2 response", cex=1.5)
lines(out20.2[1:301,c(1,3)], lwd=3, col=gray(0.5))
lines(out40.2[1:301,c(1,3)], lwd=3, col=gray(0.3))
lines(out80.2[1:301,c(1,3)], lwd=3, col=gray(0.1))
plot(out10.2[1:301,c(1,2)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th1 response", cex=1.5)
lines(out20.2[1:301,c(1,2)], lwd=3, col=gray(0.5))
lines(out40.2[1:301,c(1,2)], lwd=3, col=gray(0.3))
lines(out80.2[1:301,c(1,2)], lwd=3, col=gray(0.1))
## Chronic to acute
plot(out10.3[1:301,c(1,4)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,250), cex.axis=1.5)
mtext(side=2, line=3.5, "Parasite biomass", cex=1.5)
lines(out20.3[1:301,c(1,4)], lwd=3, col=gray(0.5))
lines(out40.3[1:301,c(1,4)], lwd=3, col=gray(0.3))
lines(out80.3[1:301,c(1,4)], lwd=3, col=gray(0.1))
plot(out10.3[1:301,c(1,3)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th2 response", cex=1.5)
lines(out20.3[1:301,c(1,3)], lwd=3, col=gray(0.5))
lines(out40.3[1:301,c(1,3)], lwd=3, col=gray(0.3))
lines(out80.3[1:301,c(1,3)], lwd=3, col=gray(0.1))
plot(out10.3[1:301,c(1,2)], type='l', lwd=3, col=gray(0.7), xlab='', ylab='', ylim=c(0,1600), cex.axis=1.5)
mtext(side=2, line=3.5, "Th1 response", cex=1.5)
lines(out20.3[1:301,c(1,2)], lwd=3, col=gray(0.5))
lines(out40.3[1:301,c(1,2)], lwd=3, col=gray(0.3))
lines(out80.3[1:301,c(1,2)], lwd=3, col=gray(0.1))
mtext("Age of infection", side=1, line=1, outer=TRUE, cex=1.5)
setwd("~/newGEM_SIR/Analysis Code/Covariation")
data <- readRDS("out_negcorr_hivar_c_alpha.RDS")
data[[1]]
d = data[[1]][[1]]
d
str(d)
d$S[d$t>80]
mean(d$S[d$t>80])
d2 = data[[1]][[2]]
d2
d2
d2$numInf
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]]))) -> sumdata
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])) -> sumdata
d = data[[1]]
d
mean(d[[1]]$S[d[[1]]$t>80])
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]]))) -> sumdata
sum(d[[2]]$numInf==0)
nrow(d[[2]])
sum(d[[2]]$numInf==0)/nrow(d[[2]])
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) -> sumdata
sumdata
d = data[[48]]
d
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) %>% do.call("as.data.frame", .) -> sumdata
library(tidyverse)
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) %>% do.call("as.data.frame", .) -> sumdata
sumdata
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) %>% do.call("as.data.frame", .) -> sumdata
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) %>% do.call("rbind.data.frame", .) -> sumdata
sumdata
with(sumdata, plot(frac0Reff, meanS))
with(sumdata, plot(frac0Reff[!is.na(meanS)], meanS))
with(sumdata, plot(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)]))
with(sumdata, plot(maxReff[!is.na(meanS)], meanS[!is.na(meanS)]))
corr(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)]))
corr(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)])
cov(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)])
with(sumdata, cov(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)]))
with(sumdata, cor(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)]))
}
for(corr in c("negcorr","poscorr","nocorr")) {
for (var in c("hivar","medvar","lowvar")) {
data <- readRDS(paste0("out_",corr,"_",var,"_c_alpha.RDS"))
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) %>% do.call("rbind.data.frame", .) -> sumdata
ReffEpidemicCorr <- rbind(ReffEpidemicCorr,
c(corr1=with(sumdata, cor(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)])),
corr2=with(sumdata, cor(maxReff[!is.na(meanS)], meanS[!is.na(meanS)])),
corr3=with(sumdata, cor(meanReff[!is.na(meanS)], meanS[!is.na(meanS)]))))
}
}
ReffEpidemicCorr <- vector()
for(corr in c("negcorr","poscorr","nocorr")) {
for (var in c("hivar","medvar","lowvar")) {
data <- readRDS(paste0("out_",corr,"_",var,"_c_alpha.RDS"))
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) %>% do.call("rbind.data.frame", .) -> sumdata
ReffEpidemicCorr <- rbind(ReffEpidemicCorr,
c(var=var,
corrType=corr,
corr1=with(sumdata, cor(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)])),
corr2=with(sumdata, cor(maxReff[!is.na(meanS)], meanS[!is.na(meanS)])),
corr3=with(sumdata, cor(meanReff[!is.na(meanS)], meanS[!is.na(meanS)]))))
}
}
ReffEpidemicCorr
var="lowvar"
corr="negcorr"
data <- readRDS(paste0("out_",corr,"_",var,"_c_alpha.RDS"))
+     lapply(data, function(d)
+       data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
+                  medianS=median(d[[1]]$S[d[[1]]$t>80]),
+                  minS=min(d[[1]]$S[d[[1]]$t>80]),
+                  meanReff=mean(d[[2]]$numInf),
+                  medReff=median(d[[2]]$numInf),
+                  maxReff=max(d[[2]]$numInf),
+                  frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
+       )
+     ) %>% do.call("rbind.data.frame", .) -> sumdata
data <- readRDS(paste0("out_",corr,"_",var,"_c_alpha.RDS"))
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) %>% do.call("rbind.data.frame", .) -> sumdata
sumdata
plot(sumdata$frac0Reff, sumdata$meanS)
par(mfrow=c(3,3), mar=c(3,3,0,0), oma=c(2,2,1,1))
for(corr in c("negcorr","poscorr","nocorr")) {
for (var in c("hivar","medvar","lowvar")) {
data <- readRDS(paste0("out_",corr,"_",var,"_c_alpha.RDS"))
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) %>% do.call("rbind.data.frame", .) -> sumdata
#ReffEpidemicCorr <- rbind(ReffEpidemicCorr,
#                          c(var=var,
#                            corrType=corr,
#                            corr1=with(sumdata, cor(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)])),
#                            corr2=with(sumdata, cor(maxReff[!is.na(meanS)], meanS[!is.na(meanS)])),
#                            corr3=with(sumdata, cor(meanReff[!is.na(meanS)], meanS[!is.na(meanS)]))))
with(sumdata, plot(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)], xlab='', ylab=''))
}
}
par(mfrow=c(3,3), mar=c(3,3,0,0), oma=c(2,2,1,1))
for(corr in c("poscorr","nocorr","negcorr")) {
for (var in c("hivar","medvar","lowvar")) {
data <- readRDS(paste0("out_",corr,"_",var,"_c_alpha.RDS"))
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) %>% do.call("rbind.data.frame", .) -> sumdata
#ReffEpidemicCorr <- rbind(ReffEpidemicCorr,
#                          c(var=var,
#                            corrType=corr,
#                            corr1=with(sumdata, cor(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)])),
#                            corr2=with(sumdata, cor(maxReff[!is.na(meanS)], meanS[!is.na(meanS)])),
#                            corr3=with(sumdata, cor(meanReff[!is.na(meanS)], meanS[!is.na(meanS)]))))
with(sumdata, plot(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)], xlab='', ylab=''))
}
}
par(mfrow=c(3,3), mar=c(3,3,0,0), oma=c(2,2,1,1))
for(corr in c("poscorr","nocorr","negcorr")) {
for (var in c("hivar","medvar","lowvar")) {
data <- readRDS(paste0("out_",corr,"_",var,"_c_alpha.RDS"))
lapply(data, function(d)
data.frame(meanS=mean(d[[1]]$S[d[[1]]$t>80]),
medianS=median(d[[1]]$S[d[[1]]$t>80]),
minS=min(d[[1]]$S[d[[1]]$t>80]),
meanReff=mean(d[[2]]$numInf),
medReff=median(d[[2]]$numInf),
maxReff=max(d[[2]]$numInf),
frac0Reff=sum(d[[2]]$numInf==0)/nrow(d[[2]])
)
) %>% do.call("rbind.data.frame", .) -> sumdata
#ReffEpidemicCorr <- rbind(ReffEpidemicCorr,
#                          c(var=var,
#                            corrType=corr,
#                            corr1=with(sumdata, cor(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)])),
#                            corr2=with(sumdata, cor(maxReff[!is.na(meanS)], meanS[!is.na(meanS)])),
#                            corr3=with(sumdata, cor(meanReff[!is.na(meanS)], meanS[!is.na(meanS)]))))
with(sumdata, plot(frac0Reff[!is.na(meanS)], meanS[!is.na(meanS)], xlab='', ylab='', ylim=c(20,100)))
}
}
