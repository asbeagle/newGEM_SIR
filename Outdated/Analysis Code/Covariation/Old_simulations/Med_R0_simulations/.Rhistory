var1=c('c','c','c','shed','shed','alpha')
var2=c('shed','alpha','gamma','alpha','gamma','gamma')
i <- 1
data <- vector(mode='list', length=18)
for (j in 1:6) { ## loop over the six different covariance combinations
for (covMatrix in c("nocorr", "negcorr", "poscorr")) {
z1 = readRDS(paste0(paste("out",covMatrix,"hivar",var1[j],var2[j],sep="_"),".RDS"))
z2 = readRDS(paste0(paste("out",covMatrix,"medvar",var1[j],var2[j],sep="_"),".RDS"))
z3 = readRDS(paste0(paste("out",covMatrix,"lowvar",var1[j],var2[j],sep="_"),".RDS"))
z <- vector(mode='list',length=3)
lapply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I),
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="high",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[1]]
colnames(z[[1]])[1:2] <- c("peak","top20SS","rep")
lapply(1:length(z2), function(i) c(max(z2[[i]][[1]]$I),
sum(sort(z2[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z2[[i]][[2]]))])/sum(z2[[i]][[2]]$numInf),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="med",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[2]]
colnames(z[[2]])[1:2] <- c("peak","top20SS","rep")
lapply(1:length(z3), function(i) c(max(z3[[i]][[1]]$I),
sum(sort(z3[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z3[[i]][[2]]))])/sum(z3[[i]][[2]]$numInf),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="low",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[3]]
colnames(z[[3]])[1:2] <- c("peak","top20SS","rep")
data[[i]] <- do.call("rbind.data.frame",z)
i <- i+1
}
}
data %>% do.call("rbind.data.frame",.) -> data
data
lapply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I),
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="high",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[1]]
colnames(z[[1]])[1:2] <- c("peak","top20SS","rep")
var1=c('c','c','c','shed','shed','alpha')
var2=c('shed','alpha','gamma','alpha','gamma','gamma')
i <- 1
data <- vector(mode='list', length=18)
for (j in 1:6) { ## loop over the six different covariance combinations
for (covMatrix in c("nocorr", "negcorr", "poscorr")) {
z1 = readRDS(paste0(paste("out",covMatrix,"hivar",var1[j],var2[j],sep="_"),".RDS"))
z2 = readRDS(paste0(paste("out",covMatrix,"medvar",var1[j],var2[j],sep="_"),".RDS"))
z3 = readRDS(paste0(paste("out",covMatrix,"lowvar",var1[j],var2[j],sep="_"),".RDS"))
z <- vector(mode='list',length=3)
lapply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I),
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="high",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[1]]
colnames(z[[1]])[1:3] <- c("peak","top20SS","rep")
lapply(1:length(z2), function(i) c(max(z2[[i]][[1]]$I),
sum(sort(z2[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z2[[i]][[2]]))])/sum(z2[[i]][[2]]$numInf),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="med",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[2]]
colnames(z[[2]])[1:3] <- c("peak","top20SS","rep")
lapply(1:length(z3), function(i) c(max(z3[[i]][[1]]$I),
sum(sort(z3[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z3[[i]][[2]]))])/sum(z3[[i]][[2]]$numInf),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="low",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[3]]
colnames(z[[3]])[1:3] <- c("peak","top20SS","rep")
data[[i]] <- do.call("rbind.data.frame",z)
i <- i+1
}
}
data %>% do.call("rbind.data.frame",.) -> data
glm(top20SS~peak+Variance+cov+traits,family='binomial')
glm(top20SS~peak+Variance+cov+traits,family='binomial',data=data)
glm(top20SS~peak+Variance+cov+traits,family='binomial',data=data) %>% summary
glm(top20SS~peak+Variance,family='binomial',data=subset(data,traits=="c-alpha")) %>% summary
glm(top20SS~peak+Variance,family='binomial',data=subset(data,traits=="c-alpha")) %>% summary
glm(top20SS~peak+Variance,family='binomial',data=subset(data,traits=="c-alpha")) -> mod
mod$residuals
hist(mod$residuals)
plot(mod)
glm(top20SS~peak+Variance,family='binomial',data=subset(data,traits=="c-alpha")) -> mod
subset(data,traits=="c-alpha")
glm(top20SS~peak+Variance,family='binomial',data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
plot(mod)
glm(top20SS~peak+Variance,family='binomial',data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
subset(data,traits=="c-alpha" & peak > 50)
plot(subset(data,traits=="c-alpha" & peak > 50)[,c(1,2)])
glm(peak~top20SS+Variance,family='binomial',data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
glm(peak~top20SS+Variance,data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
plot(mod)
mod
summary(mod)
glm(peak~top20SS+Variance-1,data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
summary(mod)
glm(peak~top20SS+Variance-1,data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
subset(data,traits=="c-alpha" & peak > 50)
plot(subset(data,traits=="c-alpha" & peak > 50)[,c(2,1)])
glm(peak~top20SS+Variance,data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
shapiro.test(mod$residuals)
glm(peak~top20SS+Variance+cov,data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
shapiro.test(mod$residuals)
summary(mod)
glm(peak~top20SS+Variance*cov,data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
shapiro.test(mod$residuals)
summary(mod)
glm(peak~top20SS+Variance+cov,data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
summary(mod)
glm(peak~top20SS+Variance,data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
summary(mod)
glm(peak~top20SS*Variance,data=subset(data,traits=="c-alpha" & peak > 50)) -> mod
summary(mod)
aov()
aov(top20SS~Variance,data=subset(data,traits=="c-alpha" & peak > 50))
aov(top20SS~Variance,data=subset(data,traits=="c-alpha" & peak > 50)) %>% summary
## Is there any effect of proportion of super-spreaders on peak epidemic size?
## For each trait pairing, you could just regress peak epidemic size against proportion of super-spreaders
glm(peak~top20SS*Variance,data=subset(data,traits=="c-shed" & peak > 50)) %>% summary
## Is there any effect of proportion of super-spreaders on peak epidemic size?
## For each trait pairing, you could just regress peak epidemic size against proportion of super-spreaders
glm(peak~top20SS,data=subset(data,traits=="c-shed" & peak > 50)) %>% summary
glm(peak~top20SS,data=subset(data,traits=="c-alpha" & peak > 50)) %>% summary
glm(peak~top20SS,data=subset(data,traits=="c-gamma" & peak > 50)) %>% summary
glm(peak~top20SS,data=subset(data,traits=="shed-alpha" & peak > 50)) %>% summary
glm(peak~top20SS,data=subset(data,traits=="shed-gamma" & peak > 50)) %>% summary
glm(peak~top20SS,data=subset(data,traits=="shed-alpha" & peak > 50)) %>% summary ## NOT significant
glm(peak~top20SS,data=subset(data,traits=="alpha-gamma" & peak > 50)) %>% summary
aov(top20SS~Variance,data=subset(data,traits=="c-alpha" & peak > 50)) %>% summaryaov(top20SS~Variance,data=subset(data,traits=="c-alpha" & peak > 50)) %>% summary
aov(top20SS~Variance,data=subset(data,traits=="c-alpha" & peak > 50)) %>% summary
## Of course, there is often a really strong correlation between top20SS and variance, so this could just be picking up that effect, and that once you've accounted for the effect of variance, there is no effect of top20SS
aov(top20SS~Variance,data=subset(data,traits=="c-shed" & peak > 50)) %>% summary ## signift
aov(top20SS~Variance,data=subset(data,traits=="c-gamma" & peak > 50)) %>% summary ## significant
aov(top20SS~Variance,data=subset(data,traits=="shed-alpha" & peak > 50)) %>% summary ## significant
aov(top20SS~Variance,data=subset(data,traits=="alpha-gamma" & peak > 50)) %>% summary ## significant
aov(top20SS~Variance,data=subset(data,traits=="alpha-gamma" & peak > 50)) %>% summary ## significant
aov(top20SS~Variance,data=subset(data,traits=="shed-gamma" & peak > 50)) %>% summary ## significant
glm(peak~top20SS,data=subset(data,traits=="c-shed" & peak > 50 & Variance=="low")) %>% summary ## significant
## c-shed influence of top20SS on peak after accounting for variance
glm(peak~top20SS,data=subset(data,traits=="c-shed" & peak > 50 & Variance=="low")) %>% summary ## significant
glm(peak~top20SS,data=subset(data,traits=="c-shed" & peak > 50 & Variance=="med")) %>% summary ## significant
glm(peak~top20SS,data=subset(data,traits=="c-shed" & peak > 50 & Variance=="high")) %>% summary ## significant
glm(peak~top20SS+Variance,data=subset(data,traits=="c-shed" & peak > 50)) %>% summary
glm(peak~top20SS+Variance-1,data=subset(data,traits=="c-shed" & peak > 50)) %>% summary
aov(top20SS~cov,data=subset(data,traits=="c-shed" & peak > 50 & Variance=="low")) %>% summary
aov(top20SS~cov,data=subset(data,traits=="c-shed" & peak > 50 & Variance=="low")) %>% summary
aov(top20SS~cov,data=subset(data,traits=="c-shed" & peak > 50 & Variance=="med")) %>% summary
aov(top20SS~cov,data=subset(data,traits=="c-shed" & peak > 50 & Variance=="high")) %>% summary
## c-alpha influence of top20SS on peak after accounting for variance
glm(peak~top20SS,data=subset(data,traits=="c-alpha" & peak > 50 & Variance=="low")) %>% summary ## significant
glm(peak~top20SS,data=subset(data,traits=="c-alpha" & peak > 50 & Variance=="med")) %>% summary ## significant
glm(peak~top20SS,data=subset(data,traits=="c-alpha" & peak > 50 & Variance=="high")) %>% summary ## NOT SIGNIFICANT
glm(peak~top20SS+Variance-1,data=subset(data,traits=="c-alpha" & peak > 50)) %>% summary
## of course, this could just be that there is a strong relationship between SS and covariance! Need to check this too.
aov(top20SS~cov,data=subset(data,traits=="c-alpha" & peak > 50 & Variance=="low")) %>% summary
aov(top20SS~cov,data=subset(data,traits=="c-alpha" & peak > 50 & Variance=="med")) %>% summary
aov(top20SS~cov,data=subset(data,traits=="c-alpha" & peak > 50 & Variance=="high")) %>% summary
glm(peak~top20SS+Variance+cov-1,data=subset(data,traits=="c-alpha" & peak > 50)) %>% summary ## significant effect of SS after accounting for variance
glm(peak~top20SS+Variance+cov,data=subset(data,traits=="c-alpha" & peak > 50)) %>% summary ## significant effect of SS after accounting for variance
glm(peak~top20SS+Variance+cov,data=subset(data,traits=="c-shed" & peak > 50)) %>% summary
head(data)
glm(peak~top20SS,data=subset(data,traits=="c-alpha" & peak > 50 & Variance=="low" & cov=="nocorr")) %>% summary ## significant
glm(peak~top20SS,data=subset(data,traits=="c-alpha" & peak > 50 & Variance=="low" & cov=="nocorr")) %>% summary ## NOT SIGNIFICANT
glm(peak~top20SS,data=subset(data,traits=="c-alpha" & peak > 50 & Variance=="low" & cov=="negcorr")) %>% summary ## NOT SIGNIFICANT
glm(peak~top20SS,data=subset(data,traits=="c-alpha" & peak > 50 & Variance=="low" & cov=="poscorr")) %>% summary ## NOT SIGNIFICANT
?expand.grid
## Must perform separate regressions after accounting for both variance and covariance, since these have a significant effect on top20SS
peakSSreg <- expand.grid(traits=c("c-shed","c-alpha","c-gamma","shed-alpha","shed-gamma","alpha-gamma"),
Variance=c("low","med","high"),
cov=c("nocorr","negcorr","poscorr"))
peakSSreg
## Must perform separate regressions after accounting for both variance and covariance, since these have a significant effect on top20SS
peakSSreg <- expand.grid(cov=c("nocorr","negcorr","poscorr"),
Variance=c("low","med","high"),
traits=c("c-shed","c-alpha","c-gamma","shed-alpha","shed-gamma","alpha-gamma")
)
peakSSreg
## Must perform separate regressions after accounting for both variance and covariance, since these have a significant effect on top20SS
peakSSreg <- expand.grid(cov=c("nocorr","negcorr","poscorr"),
Variance=c("low","med","high"),
traits=c("c-shed","c-alpha","c-gamma","shed-alpha","shed-gamma","alpha-gamma")
slope=NA,
signif=NA
)
## Must perform separate regressions after accounting for both variance and covariance, since these have a significant effect on top20SS
peakSSreg <- expand.grid(cov=c("nocorr","negcorr","poscorr"),
Variance=c("low","med","high"),
traits=c("c-shed","c-alpha","c-gamma","shed-alpha","shed-gamma","alpha-gamma"),
slope=NA,
signif=NA
)
## Must perform separate regressions after accounting for both variance and covariance, since these have a significant effect on top20SS
peakSSreg <- expand.grid(cov=c("nocorr","negcorr","poscorr"),
Variance=c("low","med","high"),
traits=c("c-shed","c-alpha","c-gamma","shed-alpha","shed-gamma","alpha-gamma"),
slope=NA,
signif=NA
) %>% as.data.frame
i = 10
i = 30
mod <- glm(peak~top20SS,data=subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i]))
mod
mod <- glm(peak~top20SS-1,data=subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i]))
mod
mod %>% summary
mod <- glm(peak~top20SS,data=subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i]))
plot(mod)
mod$residuals
hist(mod$residuals)
shapiro.test(mod$residuals)
mod
str(mod)
mod$coefficients
mod$coefficients[2]
mod <- lm(peak~top20SS,data=subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i]))
mod
summary(mod)
mod$coefficients
mod
mod[1]
mod[2]
mod[3]
mod[4]
mod[5]
mod[6]
mod[7]
mod[7]
mod[8]
mod[9]
mod[10]
mod[11]
mod[12]
mod[13]
mod[14]
summary(mod)
summary(mod)[1]
summary(mod)[2]
summary(mod)[3]
summary(mod)[4]
summary(mod)$coefficients
summary(mod)$coefficients[2,4]
signif(summary(mod)$coefficients[2,4],3)
shapiro.test(mod$residuals)
summary(shapiro.test(mod$residuals))
shapiro.test(mod$residuals)
shapiro.test(mod$residuals) %>% str
shapiro.test(mod$residuals
shapiro.test(mod$residuals)$p.value
signif(shapiro.test(mod$residuals)$p.value,3)
ifelse(signif(shapiro.test(mod$residuals)$p.value,3) > 0.05, TRUE, FALSE)
peakSSreg <- expand.grid(cov=c("nocorr","negcorr","poscorr"),
Variance=c("low","med","high"),
traits=c("c-shed","c-alpha","c-gamma","shed-alpha","shed-gamma","alpha-gamma"),
slope=NA,
signif=NA,
normal=NA
) %>% as.data.frame
for (i in 1:nrow(peakSSreg)) {
mod <- lm(peak~top20SS,data=subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i]))
peakSSreg$slope[i] <- mod$coefficients[2]
peakSSreg$signif[i] <- signif(summary(mod)$coefficients[2,4],3)
peakSSreg$normal[i] ifelse(signif(shapiro.test(mod$residuals)$p.value,3) > 0.05, TRUE, FALSE)
}
peakSSreg <- expand.grid(cov=c("nocorr","negcorr","poscorr"),
Variance=c("low","med","high"),
traits=c("c-shed","c-alpha","c-gamma","shed-alpha","shed-gamma","alpha-gamma"),
slope=NA,
signif=NA,
normal=NA
) %>% as.data.frame
for (i in 1:nrow(peakSSreg)) {
mod <- lm(peak~top20SS,data=subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i]))
peakSSreg$slope[i] <- mod$coefficients[2]
peakSSreg$signif[i] <- signif(summary(mod)$coefficients[2,4],3)
peakSSreg$normal[i] <- ifelse(signif(shapiro.test(mod$residuals)$p.value,3) > 0.05, TRUE, FALSE)
}
i
mod <- try(lm(peak~top20SS,data=subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i])))
mod
if(inherits('try-error',mod))
inherits('try-error',mod)
inherits(mod,'try-error')
peakSSreg <- expand.grid(cov=c("nocorr","negcorr","poscorr"),
Variance=c("low","med","high"),
traits=c("c-shed","c-alpha","c-gamma","shed-alpha","shed-gamma","alpha-gamma"),
slope=NA,
signif=NA,
normal=NA
) %>% as.data.frame
for (i in 1:nrow(peakSSreg)) {
mod <- try(lm(peak~top20SS,data=subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i])))
if(!inherits(mod,'try-error')) {
peakSSreg$slope[i] <- mod$coefficients[2]
peakSSreg$signif[i] <- signif(summary(mod)$coefficients[2,4],3)
peakSSreg$normal[i] <- ifelse(signif(shapiro.test(mod$residuals)$p.value,3) > 0.05, TRUE, FALSE)
}
}
i
mod <- try(lm(peak~top20SS,data=subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i])))
mod
subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i])
peakSSreg$slope[i] <- mod$coefficients[2]
peakSSreg$signif[i] <- signif(summary(mod)$coefficients[2,4],3)
peakSSreg <- expand.grid(cov=c("nocorr","negcorr","poscorr"),
Variance=c("low","med","high"),
traits=c("c-shed","c-alpha","c-gamma","shed-alpha","shed-gamma","alpha-gamma"),
slope=NA,
signif=NA,
normal=NA
) %>% as.data.frame
for (i in 1:nrow(peakSSreg)) {
mod <- try(lm(peak~top20SS,data=subset(data,traits==peakSSreg$traits[i] & peak > 50 & Variance==peakSSreg$Variance[i] & cov==peakSSreg$cov[i])))
if(!inherits(mod,'try-error')) { ## if all the simulations went extinct, don't try to do a regression
peakSSreg$slope[i] <- mod$coefficients[2]
if (!is.na(mod$coefficients[2])) { ## if there was no variation in top20SS then don't try to do a regression
peakSSreg$signif[i] <- signif(summary(mod)$coefficients[2,4],3)
peakSSreg$normal[i] <- ifelse(signif(shapiro.test(mod$residuals)$p.value,3) > 0.05, TRUE, FALSE)
}
}
}
i
peakSSreg
peakSSreg$signif
sort(peakSSreg$signif, reverse=TRUE)
?sort
sort(peakSSreg$signif)
order(peakSSreg$signif)
peakSSreg[order(peakSSreg$signif),]
data <- readRDS("population_dynamics_all_simulations_medvar.RDS")
library(emmeans)
library(tidyverse)
var1=c('c','c','c','shed','shed','alpha')
var2=c('shed','alpha','gamma','alpha','gamma','gamma')
contrasts1 <- vector(mode='list', length=18)
contrasts2 <- vector(mode='list', length=18)
i <- 1
j = 3
filter(data, traits==paste(var1[j],var2[j],sep='-') & cov==covMatrix)
covMatrix
covMatrix="(+) Cov"
filter(data, traits==paste(var1[j],var2[j],sep='-') & cov==covMatrix)
filter(data, traits==paste(var1[j],var2[j],sep='-') & cov==covMatrix & var=="high")
filter(data, traits==paste(var1[j],var2[j],sep='-') & cov==covMatrix & Variance=="high")
covMatrix=="nocorr"
covMatrix="nocorr"
z1 = readRDS(paste0(paste("out",covMatrix,"hivar",var1[j],var2[j],sep="_"),".RDS"))
z2 = readRDS(paste0(paste("out",covMatrix,"medvar",var1[j],var2[j],sep="_"),".RDS"))
z3 = readRDS(paste0(paste("out",covMatrix,"lowvar",var1[j],var2[j],sep="_"),".RDS"))
z1
z[[1]][[2]]
z[[1]]
z1[[1]]
z1[[1]][[2]]
j
z1[[2]][[2]]
hist(z1[[2]][[2]]$numInf)
glm.nb(z1[[2]][[2]]$numInf~1)
library(MASS)
glm.nb(z1[[2]][[2]]$numInf~1)
glm.nb(z1[[2]][[2]]$numInf~1) %>% summary
?glm.nb
glm.nb(z1[[2]][[2]]$numInf~1)$coefficients
glm.nb(z1[[2]][[2]]$numInf~1)$theta
rnegbin
rnegbin(1000, theta=0.14)
hist(rnegbin(1000, theta=0.14))
rnegbin(1000, theta=0.14) -> dd
glm.nb(dd~1)
pnegbin(0,mu=6.675,theta=0.14)
?rnegbin
pnbinom
pnbinom(0,size=0.14,mu=6.67)
pnbinom(0,size=0.14,mu=exp(6.67))
glm.nb(z1[[2]][[2]]$numInf~1) %>% summary
glm.nb(z1[[2]][[2]]$numInf~1) %>% coefficients
pnbinom(0,size=0.14,mu=exp(-0.00185))
sum(z1[[2]][[2]]$numInf==0)/length(z1[[2]][[2]]$numInf)
filter(data, traits==paste(var1[j],var2[j],sep='-') & Variance==var)
nocorr <- matrix(c(1,0,0,1), nrow=2, byrow=T)
negcorr <- matrix(c(1,-.5,-.5,1), nrow=2, byrow=T)
poscorr <- matrix(c(1,.5,.5,1), nrow=2, byrow=T)
hivar = c(   c=0.1,    shed=0.05,    alpha=0.1,    gamma=0.1,
sd_c=0.5, sd_shed=0.25, sd_alpha=0.5, sd_gamma=0.5,
b=2.5, d=.1, bs=.01)
medvar = c(   c=0.1,    shed=0.05,    alpha=0.1,    gamma=0.1,
sd_c=0.1, sd_shed=0.05, sd_alpha=0.1, sd_gamma=0.1,
b=2.5, d=.1, bs=.01)
lowvar = c(   c=0.1,     shed=0.05,    alpha=0.1,     gamma=0.1,
sd_c=0.02, sd_shed=0.01, sd_alpha=0.02, sd_gamma=0.02,
b=2.5, d=.1, bs=.01)
## Statistical analysis
data <- readRDS("population_dynamics_all_simulations_medvar.RDS")
library(emmeans)
library(tidyverse)
var1=c('c','c','c','shed','shed','alpha')
var2=c('shed','alpha','gamma','alpha','gamma','gamma')
contrasts1 <- vector(mode='list', length=18)
contrasts2 <- vector(mode='list', length=18)
i <- 1
j = 4
covMatrix = "(0) Cov"
filter(data, traits==paste(var1[j],var2[j],sep='-') & cov==covMatrix)
filter(data, traits==paste(var1[j],var2[j],sep='-') & cov==covMatrix) %>% group_by(Variance, rep) %>% summarise(peak=ifelse(max(I)>50,max(I),NA), Iequil=ifelse(min(I)>1,mean(tail(I),50),NA)) %>%
as.data.frame() -> d
d
with(d, lm(log(peak)~Variance)) -> model1
with(d, lm(Iequil~Variance)) -> model2
model1
model1 %>% summary
normal.test1 <- shapiro.test(model1$residuals)$p.value
normal.test1
model1 %>% emmeans(pairwise~Variance) -> comparison1
comparison1
summary(model1)
comparison1$contrasts
comparison1$contrasts %>% as.data.frame %>% mutate(., normalTest=normal.test1, Covariance=covMatrix, traits=paste(var1[j],var2[j],sep='-')) -> contrast1
contrast1
comparison1
comparison1$contrasts
comparison1$contrasts[,'estimate']
comparison1$contrasts %>% str
comparison1$contrasts %>% as.data.frame
as.data.frame(comparison1$contrasts)$estimate
as.data.frame(comparison1$contrasts)$estimate %>% exp
i <- 1
for (j in 1:6) {
for (covMatrix in c("(0) Cov", "(-) Cov", "(+) Cov")) {
filter(data, traits==paste(var1[j],var2[j],sep='-') & cov==covMatrix) %>% group_by(Variance, rep) %>% summarise(peak=ifelse(max(I)>50,max(I),NA), Iequil=ifelse(min(I)>1,mean(tail(I),50),NA)) %>%
as.data.frame() -> d
with(d, lm(log(peak)~Variance)) -> model1
with(d, lm(Iequil~Variance)) -> model2
normal.test1 <- shapiro.test(model1$residuals)$p.value
normal.test2 <- shapiro.test(model2$residuals)$p.value
model1 %>% emmeans(pairwise~Variance) -> comparison1 ## see https://timmastny.com/blog/tests-pairwise-categorical-mean-emmeans-contrast/
model2 %>% emmeans(pairwise~Variance) -> comparison2 ## see https://timmastny.com/blog/tests-pairwise-categorical-mean-emmeans-contrast/
comparison1$contrasts %>% as.data.frame %>% mutate(., estimate=exp(estimate), normalTest=normal.test1, Covariance=covMatrix, traits=paste(var1[j],var2[j],sep='-')) -> contrast1
comparison2$contrasts %>% as.data.frame %>% mutate(., estimate=exp(estimate), normalTest=normal.test2, Covariance=covMatrix, traits=paste(var1[j],var2[j],sep='-')) -> contrast2
contrasts1[[i]] <- contrast1
contrasts2[[i]] <- contrast2
i <- i + 1
}
}
contrasts1 %>% do.call("rbind.data.frame", .) -> contrasts1
contrasts2 %>% do.call("rbind.data.frame", .) -> contrasts2
write.csv(contrasts1, file="Var_effects_on_peak_stats.csv")
glm.nb(z1[[i]][[2]]$numInf)
i
i = 5
glm.nb(z1[[i]][[2]]$numInf)
z1[[i]][[2]]$numInf
z1[[i]][[2]]
z1[[20]][[2]]
glm.nb(z1[[20]][[2]]$numInf)
glm.nb(z1[[20]][[2]]$numInf~1)
glm.nb(z1[[20]][[2]]$numInf~1)$coefficients
glm.nb(z1[[20]][[2]]$numInf~1)$theta
lapply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I), ## peak epidemic size
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
glm.nb(z1[[i]][[2]]$numInf~1)$theta, ## dispersion parameter of negative binomial distribution fit to numInf
i)) %>%
do.call("rbind.data.frame",.)
i
glm.nb(z1[[i]][[2]]$numInf~1)
j
z1[[i]][[1]]
z1[[i]][[1]]$t
z1[[20]][[1]]$t
z1[[21]][[1]]$t
apply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I), ## peak epidemic size
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(z1[[i]][[1]]$t>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
i)) %>%
do.call("rbind.data.frame",.)
lapply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I), ## peak epidemic size
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(z1[[i]][[1]]$t>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
i)) %>%
do.call("rbind.data.frame",.)
i = 1
c(max(z1[[i]][[1]]$I), ## peak epidemic size
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(z1[[i]][[1]]$t>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
i)
z1[[i]][[1]]$t>99
z1[[i]][[1]]$t>99
lapply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I), ## peak epidemic size
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(max(z1[[i]][[1]]$t)>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
i)) %>%
do.call("rbind.data.frame",.)
apply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I), ## peak epidemic size
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(max(z1[[i]][[1]]$t)>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="high",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[1]]
colnames(z[[1]])[1:3] <- c("peak","top20SS","disp","rep")
lapply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I), ## peak epidemic size
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(max(z1[[i]][[1]]$t)>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="high",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[1]]
colnames(z[[1]])[1:3] <- c("peak","top20SS","disp","rep")
lapply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I), ## peak epidemic size
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(max(z1[[i]][[1]]$t)>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="high",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[1]]
colnames(z[[1]])[1:4] <- c("peak","top20SS","disp","rep")
z[[1]]
