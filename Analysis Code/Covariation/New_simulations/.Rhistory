mutate(., cov=ifelse(cov=="nocorr","none",
ifelse(cov=="poscorr","positive","negative"))) %>%
rename(Covariance=cov) %>%
mutate(., Variance=ifelse(Variance=="low", "low",
ifelse(Variance=="med", "moderate", "high"))) -> data
## order variables
data$Variance<-factor(data$Variance, levels = c("low", "moderate", "high"))
data$trait_name<-factor(data$trait_name, levels=c("virulence-recovery", "contact-infectiousness",
"contact-virulence","contact-recovery", "infectiousness-virulence",
"infectiousness-recovery"))
# create column with covariation signs rather than words
mutate(data, cov_sign=ifelse(Covariance=="negative","(-)",
ifelse(Covariance=="none", "(0)", "(+)")))->data
data$cov_sign<-factor(data$cov_sign,levels=c("(-)", "(0)","(+)"))
ggplot(subset(data, trait_name%in%c("contact-virulence","contact-recovery", "infectiousness-virulence", "infectiousness-recovery")), aes(x=fadeout, fill=Variance))+
geom_bar(position=position_dodge2(width=1.2, preserve="single"))+
scale_fill_manual(values=c("cornflowerblue", "pink", "sienna3"))+
facet_grid(cov_sign~trait_name)+
theme_bw()+
scale_x_discrete(limits=c(0, 1))+
labs(y="Count", x="Fade out", title= "Intergroup Trait Pairings")+
theme(text = element_text(size=15),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 10,  # Top margin
r = 20,  # Right margin
b = 10,  # Bottom margin
l = 10),
legend.key.size = unit(1,'cm'),
legend.key.width = unit(1.5,'cm'))
ggplot(subset(data, trait_name%in%c("virulence-recovery", "contact-infectiousness")), aes(x=fadeout, fill=Variance))+
geom_bar(position=position_dodge2(width=1.2, preserve="single"))+
scale_fill_manual(values=c("cornflowerblue", "pink", "sienna3"))+
facet_grid(cov_sign~trait_name)+
theme_bw()+
scale_x_discrete(limits=c(0, 1))+
labs(y="Count", x="Fade out", title= "Intragroup Trait Pairings")+
theme(text = element_text(size=15),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 10,  # Top margin
r = 20,  # Right margin
b = 10,  # Bottom margin
l = 10),
legend.key.size = unit(1,'cm'),
legend.key.width = unit(1.5,'cm'))
# R0=1 fade out bar plots
intergroup_fade<-ggplot(subset(data, trait_name%in%c("contact-virulence","contact-recovery", "infectiousness-virulence", "infectiousness-recovery")), aes(x=fadeout, fill=Variance))+
geom_bar(position=position_dodge2(width=1.2, preserve="single"))+
scale_fill_manual(values=c("cornflowerblue", "pink", "sienna3"))+
facet_grid(cov_sign~trait_name)+
theme_bw()+
scale_x_discrete(limits=c(0, 1))+
labs(y="Count", x="Fade out", title= "Intergroup Trait Pairings")+
theme(text = element_text(size=15),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 10,  # Top margin
r = 20,  # Right margin
b = 10,  # Bottom margin
l = 10),
legend.key.size = unit(1,'cm'),
legend.key.width = unit(1.5,'cm'))
pdf("inter_fade.pdf", width = 16, height = 12)
print(intergroup_fade)
dev.off()
intragroup_fade<-ggplot(subset(data, trait_name%in%c("virulence-recovery", "contact-infectiousness")), aes(x=fadeout, fill=Variance))+
geom_bar(position=position_dodge2(width=1.2, preserve="single"))+
scale_fill_manual(values=c("cornflowerblue", "pink", "sienna3"))+
facet_grid(cov_sign~trait_name)+
theme_bw()+
scale_x_discrete(limits=c(0, 1))+
labs(y="Count", x="Fade out", title= "Intragroup Trait Pairings")+
theme(text = element_text(size=15),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 10,  # Top margin
r = 20,  # Right margin
b = 10,  # Bottom margin
l = 10),
legend.key.size = unit(1,'cm'),
legend.key.width = unit(1.5,'cm'))
pdf("inrar_fade.pdf", width = 16, height = 12)
print(intragroup_fade)
dev.off()
data %>% group_by(Variance, cov_sign, trait_name) %>% summarise(maxpeak=max(peak)) -> max_peak_dat
inter_peak<-ggplot(subset(data, trait_name%in%c("contact-virulence","contact-recovery", "infectiousness-virulence", "infectiousness-recovery")), aes(x=peak))+
stat_ecdf(aes(color=Variance),size=1.5, alpha=0.8)+
geom_point(data=subset(max_peak_dat, trait_name%in%c("contact-virulence","contact-recovery", "infectiousness-virulence", "infectiousness-recovery")), mapping=aes(x=maxpeak, y=1, shape=Variance),size=3,alpha=0.7)+
facet_grid(cov_sign~trait_name)+
scale_color_manual(values=c("cornflowerblue", "pink", "sienna3"))+
theme_bw()+
labs(y="% of simulations", x="Peak", title= "Intergroup Trait Pairings")+
theme(text = element_text(size=15),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 10,  # Top margin
r = 20,  # Right margin
b = 10,  # Bottom margin
l = 10),
legend.key.size = unit(1,'cm'),
legend.key.width = unit(1.5,'cm'))
pdf("inter_peak_R1_plot.pdf", width = 16, height = 12)
print(inter_peak)
dev.off()
intra_peak<-ggplot(subset(data, trait_name%in%c("virulence-recovery", "contact-infectiousness")), aes(x=peak))+
stat_ecdf(aes(color=Variance),size=1.5, alpha=0.8)+
geom_point(data=subset(max_peak_dat, trait_name%in%c("virulence-recovery", "contact-infectiousness")), mapping=aes(x=maxpeak, y=1,shape=Variance),size=3)+
facet_grid(cov_sign~trait_name)+
scale_color_manual(values=c("cornflowerblue", "pink", "sienna3"))+
theme_bw()+
labs(y="% of simulations", x="Peak", title = "Intragroup Trait Pairings")+
theme(text = element_text(size=15),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 10,  # Top margin
r = 20,  # Right margin
b = 10,  # Bottom margin
l = 10),
legend.key.size = unit(1,'cm'),
legend.key.width = unit(1.5,'cm'))
pdf("intra_peak_R1_plot.pdf", width = 16, height = 12)
print(intra_peak)
dev.off()
dat = fread("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_W_1718.csv")
head(dat)
dat$DateTime[1]
dat = fread("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_W_1718.csv")
dat[, datetime:=as.POSIXct(strptime(DateTime, format="%Y-%m-%d %H:%M:%S", tz="UTC"))]
head(dat)
dat = fread("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_W_1718.csv")
dat
dat = fread("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_W_1718.csv")
dat[, datetime:=as.POSIXct(strptime(DateTime, format="%Y-%m-%d %H:%M:%S", tz="GMT"))]
head(dat)
?as.POSIXct
now <- as.POSIXlt(Sys.time())
now
now <- as.POSIXct(Sys.time())
now
dat[, t:=as.numeric(datetime)]
unq_collars = unique(dat$AnimalID)
# only look at the times when every elk was present
mint = max((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$minT)
maxt = min((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$maxT)
mint
maxt
as.numeric(now)
dat = fread("../data/pig_movements.csv")
dat[, datetime:=as.POSIXct(strptime(date_time, format="%Y-%m-%d %H:%M:%S", tz="GMT"))]
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/mqwilber-moveSTIR-1509c3e/code")
setwd("~/Desktop/mqwilber-moveSTIR-1509c3e/data")
dat = fread("../pig_movements.csv")
dat = fread("pig_movements.csv")
dat[, datetime:=as.POSIXct(strptime(date_time, format="%Y-%m-%d %H:%M:%S", tz="GMT"))]
head(dat)
dat[, t:=as.numeric(datetime)]
unq_collars = unique(dat$individual_ID)
mint = min(dat$t)
maxt = max(dat$t)
MINT
mint
maxt
exp(maxt-mint)
exp(mint-maxt)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER")
# read in data and make a telemetry object
elk<-read.csv("NER_ELK_2016_2022_Proofed_Collar_data.csv")
# subset data into winter 2017/2018
elk_S_1718 <-subset(elk, Date > "2017-05-15" & Date < "2017-11-15")
# subset data into winter 2017/2018
elk_S_1718 <-subset(elk, Date > "2018-05-15" & Date < "2018-11-15")
write.csv(elk_S_1718,"~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/elk_S_1718.csv", row.names = TRUE)
# randomly subset to only 10 individuals to test speed
sample(unique(elk_S_1718$AnimalID), size=10) # randomly select 10 individuals to keep in subset
subset_elk_S_1718<-subset(elk_W_1718, AnimalID%in%c(917, 1058, 1045,1057,1031,1018,1048,1056,1022,1030)) # using same individuals from winter
subset_elk_S_1718<-subset(elk_S_1718, AnimalID%in%c(917, 1058, 1045,1057,1031,1018,1048,1056,1022,1030)) # using same individuals from winter
unique(subset_elk_S_1718$AnimalID)
unique(elk_S_1718$AnimalID)
unique(elk_W_1718$AnimalID)
write.csv(subset_elk_S_1718,"~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_W_1718.csv", row.names = TRUE)
dat = fread("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_S_1718.csv")
dat = fread("subset_elk_S_1718.csv")
dat = read.csv("subset_elk_S_1718.csv")
write.csv(subset_elk_S_1718,"~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_S_1718.csv", row.names = TRUE)
dat = fread.csv("subset_elk_S_1718.csv")
dat = read.csv("subset_elk_S_1718.csv")
dat[, datetime:=as.POSIXct(strptime(DateTime, format="%Y-%m-%d %H:%M:%S", tz="GMT"))]
head(dat)
dat[, t:=as.numeric(datetime)]
library(ctmm)
library(data.table)
library(parallel)
dat[, datetime:=as.POSIXct(strptime(DateTime, format="%Y-%m-%d %H:%M:%S", tz="GMT"))]
dat[, t:=as.numeric(datetime)]
head(dat)
dat = fread("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_S_1718.csv")
dat[, datetime:=as.POSIXct(strptime(DateTime, format="%Y-%m-%d %H:%M:%S", tz="GMT"))]
dat[, t:=as.numeric(datetime)]
unq_collars = unique(dat$AnimalID)
# only look at the times when every elk was present
mint = max((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$minT)
maxt = min((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$maxT)
# Time is on the second scale
interp_vals = seq(mint, maxt, by=60*30)
head(interp_vals)
?seq
60*30
# Time is on the second scale (60*30)
interp_vals = seq(mint, maxt, by=1800)
# Time is on the second scale
interp_vals = seq(mint, maxt, by=60*30)
mint
maxt
# Time is on the second scale
interp_vals = seq(maxt, mint, by=60*30)
head(interp_vals)
# only look at the times when every elk was present
mint = max((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$minT)
maxt = min((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$maxT)
mint
maxt
dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$minT
dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)$minT
dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t))
# only look at the times when every elk was present
mint = max((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$minT)
maxt = min((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$maxT)
mint
maxt
dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t))
unique(elk_S_1718$AnimalID)
unique(elk_W_1718$AnimalID)
head(elk)
subset(elk, AnimalID=="917")
subset(elk, AnimalID=="917") %>% tail()
subset(elk, AnimalID=="917" & Date > "2018-05-15")
subset(elk, AnimalID=="917" & Date > "2018-03-15")
subset(elk, AnimalID=="917" & Date > "2018-04-15")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER")
# read in data and make a telemetry object
elk<-read.csv("NER_ELK_2016_2019.csv")
# subset data into winter 2017/2018
elk_S_1718 <-subset(elk, Date > "2018-05-15" & Date < "2018-11-15")
head(elk)
# subset data into winter 2017/2018
elk_S_1718 <-subset(elk, date > "2018-05-15" & date < "2018-11-15")
write.csv(elk_S_1718,"~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/elk_S_1718.csv", row.names = TRUE)
subset_elk_S_1718<-subset(elk_S_1718, AnimalID%in%c(917, 1058, 1045,1057,1031,1018,1048,1056,1022,1030)) # using same individuals from winter
unique(subset_elk_S_1718$AnimalID)
dat = fread("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_S_1718.csv")
dat[, datetime:=as.POSIXct(strptime(DateTime, format="%Y-%m-%d %H:%M:%S", tz="GMT"))]
dat[, t:=as.numeric(datetime)]
unq_collars = unique(dat$AnimalID)
# only look at the times when every elk was present
mint = max((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$minT)
maxt = min((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$maxT)
# Time is on the second scale
interp_vals = seq(mint, maxt, by=60*30)
write.csv(subset_elk_S_1718,"~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_S_1718.csv", row.names = TRUE)
dat = fread("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_S_1718.csv")
dat[, datetime:=as.POSIXct(strptime(DateTime, format="%Y-%m-%d %H:%M:%S", tz="GMT"))]
dat[, t:=as.numeric(datetime)]
unq_collars = unique(dat$AnimalID)
# only look at the times when every elk was present
mint = max((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$minT)
maxt = min((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$maxT)
# Time is on the second scale
interp_vals = seq(mint, maxt, by=60*30)
mint
maxt
head(dat)
head(subset_elk_S_1718)
dat = fread("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_S_1718.csv")
head(dat)
dat[, datetime:=as.POSIXct(strptime(DateTime, format="%m-%d-%Y %H:%M", tz="GMT"))]
head(dat)
dat = fread("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/subset_elk_S_1718.csv")
head(dat)
dat[, datetime:=as.POSIXct(strptime(DateTime, format="%m/%d/%Y %H:%M", tz="GMT"))]
head(dat)
dat[, t:=as.numeric(datetime)]
unq_collars = unique(dat$AnimalID)
# only look at the times when every elk was present
mint = max((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$minT)
maxt = min((dat %>% group_by(AnimalID) %>% summarise(minT=min(t), maxT=max(t)))$maxT)
# Time is on the second scale
interp_vals = seq(mint, maxt, by=60*30)
head(subset_elk_W_1718)
fit_ctmm_model = function(id, dat, interp_vals){
## Fit CTMM model for each pig
cat("Working on individual", id, "\n")
tdat = dat[AnimalID == id]
tdat = tdat[, .(DateTime, Longitude, Latitude)]
colnames(tdat) = c("timestamp", "location.long", "location.lat")
tdat = tdat[order(timestamp), ]
tdat = tdat[!duplicated(timestamp)]
# Convert to telemetry object for use in CTMM
# crs_str = "+proj=utm +zone=17 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
# not converting to UTM
# telm = as.telemetry(tdat, projection=crs_str)
telm = as.telemetry(tdat)
# Fit with CTMM
guess = ctmm.guess(telm, interactive=F)
fit = ctmm.fit(telm, guess)
# Predict 5 minute intervals (60*5 seconds)
mint = min(telm$t)
maxt = max(telm$t)
ind = (interp_vals >= mint) & (interp_vals <= maxt)
newt = interp_vals[ind]
pred = predict(fit, data=telm, t=newt)
pred_dat = data.table(id=id, x=pred$x, y=pred$y,
time_s=pred$t)
fwrite(pred_dat, paste0("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/", "S_traj_", id, ".csv"))
cat("Completed individual", id, "\n")
}
mclapply(unq_collars, fit_ctmm_model, dat, interp_vals, mc.cores=4)
unq_collars
head(dat)
fit_ctmm_model = function(id, dat, interp_vals){
## Fit CTMM model for each pig
cat("Working on individual", id, "\n")
tdat = dat[AnimalID == id]
tdat = tdat[, .(datetime, Longitude, Latitude)]
colnames(tdat) = c("timestamp", "location.long", "location.lat")
tdat = tdat[order(timestamp), ]
tdat = tdat[!duplicated(timestamp)]
# Convert to telemetry object for use in CTMM
# crs_str = "+proj=utm +zone=17 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
# not converting to UTM
# telm = as.telemetry(tdat, projection=crs_str)
telm = as.telemetry(tdat)
# Fit with CTMM
guess = ctmm.guess(telm, interactive=F)
fit = ctmm.fit(telm, guess)
# Predict 5 minute intervals (60*5 seconds)
mint = min(telm$t)
maxt = max(telm$t)
ind = (interp_vals >= mint) & (interp_vals <= maxt)
newt = interp_vals[ind]
pred = predict(fit, data=telm, t=newt)
pred_dat = data.table(id=id, x=pred$x, y=pred$y,
time_s=pred$t)
fwrite(pred_dat, paste0("~/Library/Mobile Documents/com~apple~CloudDocs/INTERN/NER/", "S_traj_", id, ".csv"))
cat("Completed individual", id, "\n")
}
mclapply(unq_collars, fit_ctmm_model, dat, interp_vals, mc.cores=4)
10/11
10/11 *(0.1)
10*0.1
sqrt(11)
sqrt(11)*8.66
sqrt(10)*8.66
setwd("~/newGEM_SIR/Analysis Code/Covariation/New_simulations")
library(tidyverse)
library(MASS)
library(ggplot2)
library(cowplot)
library(ggpubr)
library(ggtext)
library(magrittr)
## Stats on super spreading (k) and peak epidemic size
var1=c('c','c','c','shed','shed','alpha')
var2=c('shed','alpha','gamma','alpha','gamma','gamma')
i <- 1
data <- vector(mode='list', length=18)
for (j in 1:6) { ## loop over the six different covariance combinations
for (covMatrix in c("nocorr", "negcorr", "poscorr")) {
z1 = readRDS(paste0(paste("out","R=1",covMatrix,"hivar",var1[j],var2[j],sep="_"),".RDS"))
z2 = readRDS(paste0(paste("out","R=1",covMatrix,"medvar",var1[j],var2[j],sep="_"),".RDS"))
z3 = readRDS(paste0(paste("out","R=1",covMatrix,"lowvar",var1[j],var2[j],sep="_"),".RDS"))
z <- vector(mode='list',length=3)
lapply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(max(z1[[i]][[1]]$t)>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
ifelse(length(z1[[i]][[1]]$t)<99, 1, 0),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="high",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[1]]
colnames(z[[1]])[1:5] <- c("peak","top20SS","disp","fadeout", "rep")
lapply(1:length(z2), function(i) c(max(z2[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
sum(sort(z2[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z2[[i]][[2]]))])/sum(z2[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(max(z2[[i]][[1]]$t)>99, glm.nb(z2[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
ifelse(length(z2[[i]][[1]]$t)<99, 1, 0),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="med",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[2]]
colnames(z[[2]])[1:5] <- c("peak","top20SS","disp","fadeout","rep")
lapply(1:length(z3), function(i) c(max(z3[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
sum(sort(z3[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z3[[i]][[2]]))])/sum(z3[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(max(z3[[i]][[1]]$t)>99, glm.nb(z3[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
ifelse(length(z3[[i]][[1]]$t)<99, 1, 0),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="low",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[3]]
colnames(z[[3]])[1:5] <- c("peak","top20SS","disp","fadeout","rep")
data[[i]] <- do.call("rbind.data.frame",z)
i <- i+1
}
}
var1=c('c','c','c','shed','shed','alpha')
var2=c('shed','alpha','gamma','alpha','gamma','gamma')
i <- 1
data <- vector(mode='list', length=18)
for (j in 1:6) { ## loop over the six different covariance combinations
for (covMatrix in c("nocorr", "negcorr", "poscorr")) {
z1 = readRDS(paste0(paste("out","R=4",covMatrix,"hivar",var1[j],var2[j],sep="_"),".RDS"))
z2 = readRDS(paste0(paste("out","R=4",covMatrix,"medvar",var1[j],var2[j],sep="_"),".RDS"))
z3 = readRDS(paste0(paste("out","R=4",covMatrix,"lowvar",var1[j],var2[j],sep="_"),".RDS"))
z <- vector(mode='list',length=3)
lapply(1:length(z1), function(i) c(max(z1[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
sum(sort(z1[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z1[[i]][[2]]))])/sum(z1[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(max(z1[[i]][[1]]$t)>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
ifelse(length(z1[[i]][[1]]$t)<99, 1, 0),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="high",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[1]]
colnames(z[[1]])[1:5] <- c("peak","top20SS","disp","fadeout", "rep")
lapply(1:length(z2), function(i) c(max(z2[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
sum(sort(z2[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z2[[i]][[2]]))])/sum(z2[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(max(z2[[i]][[1]]$t)>99, glm.nb(z2[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
ifelse(length(z2[[i]][[1]]$t)<99, 1, 0),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="med",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[2]]
colnames(z[[2]])[1:5] <- c("peak","top20SS","disp","fadeout","rep")
lapply(1:length(z3), function(i) c(max(z3[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
sum(sort(z3[[i]][[2]]$numInf,decreasing=TRUE)[1:round(0.2*nrow(z3[[i]][[2]]))])/sum(z3[[i]][[2]]$numInf), ## fraction of cases caused by top 20% of spreaders
ifelse(max(z3[[i]][[1]]$t)>99, glm.nb(z3[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
ifelse(length(z3[[i]][[1]]$t)<99, 1, 0),
i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="low",cov=covMatrix, traits=paste(var1[j],var2[j],sep="-")) -> z[[3]]
colnames(z[[3]])[1:5] <- c("peak","top20SS","disp","fadeout","rep")
data[[i]] <- do.call("rbind.data.frame",z)
i <- i+1
}
}
data %<>% do.call("rbind.data.frame",.)
##create a column with names rather param symbols
mutate(data, trait_name=ifelse(traits=="alpha-gamma","virulence-recovery",
ifelse(traits=="c-shed","contact-infectiousness",
ifelse(traits=="c-alpha","contact-virulence",
ifelse(traits=="c-gamma","contact-recovery",
ifelse(traits=="shed-alpha","infectiousness-virulence","infectiousness-recovery")))))) %>%
mutate(., cov=ifelse(cov=="nocorr","none",
ifelse(cov=="poscorr","positive","negative"))) %>%
rename(Covariance=cov) %>%
mutate(., Variance=ifelse(Variance=="low", "low",
ifelse(Variance=="med", "moderate", "high"))) -> data
## order variables
data$Variance<-factor(data$Variance, levels = c("low", "moderate", "high"))
data$trait_name<-factor(data$trait_name, levels=c("virulence-recovery", "contact-infectiousness",
"contact-virulence","contact-recovery", "infectiousness-virulence",
"infectiousness-recovery"))
# create column with covariation signs rather than words
mutate(data, cov_sign=ifelse(Covariance=="negative","(-)",
ifelse(Covariance=="none", "(0)", "(+)")))->data
data$cov_sign<-factor(data$cov_sign,levels=c("(-)", "(0)","(+)"))
data %>% group_by(Variance, cov_sign, trait_name) %>% summarise(maxpeak=max(peak)) -> max_peak_dat
ggplot(subset(data, trait_name%in%c("contact-virulence","contact-recovery", "infectiousness-virulence", "infectiousness-recovery")), aes(x=peak))+
stat_ecdf(aes(color=Variance),size=1.5, alpha=0.8)+
geom_point(data=subset(max_peak_dat, trait_name%in%c("contact-virulence","contact-recovery", "infectiousness-virulence", "infectiousness-recovery")), mapping=aes(x=maxpeak, y=1, shape=Variance),size=3,alpha=0.7)+
facet_grid(cov_sign~trait_name)+
scale_color_manual(values=c("cornflowerblue", "pink", "sienna3"))+
theme_bw()+
labs(y="% of simulations", x="Peak", title= "Intergroup Trait Pairings")+
theme(text = element_text(size=15),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 10,  # Top margin
r = 20,  # Right margin
b = 10,  # Bottom margin
l = 10),
legend.key.size = unit(1,'cm'),
legend.key.width = unit(1.5,'cm'))
ggplot(subset(data, trait_name%in%c("contact-virulence","contact-recovery", "infectiousness-virulence", "infectiousness-recovery")), aes(x=peak))+
stat_ecdf(aes(color=Variance),size=1.5, alpha=0.8)+
geom_point(data=subset(max_peak_dat, trait_name%in%c("contact-virulence","contact-recovery", "infectiousness-virulence", "infectiousness-recovery")), mapping=aes(x=maxpeak, y=1, shape=Variance),size=3,alpha=0.7)+
facet_grid(cov_sign~trait_name)+
scale_color_manual(values=c("cornflowerblue", "pink", "sienna3"))+
theme_bw()+
labs(y="% of simulations", x="Peak", title= "Intergroup Trait Pairings")+
theme(text = element_text(size=15),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 10,  # Top margin
r = 20,  # Right margin
b = 10,  # Bottom margin
l = 10),
legend.key.size = unit(1,'cm'),
legend.key.width = unit(1.5,'cm'))+
annotate("text",
label = "My Text",
x = 25,
y = 85)
?annotate
inter_peak<-ggplot(subset(data, trait_name%in%c("contact-virulence","contact-recovery", "infectiousness-virulence", "infectiousness-recovery")), aes(x=peak))+
stat_ecdf(aes(color=Variance),size=1.5, alpha=0.8)+
geom_point(data=subset(max_peak_dat, trait_name%in%c("contact-virulence","contact-recovery", "infectiousness-virulence", "infectiousness-recovery")), mapping=aes(x=maxpeak, y=1, shape=Variance),size=3,alpha=0.7)+
facet_grid(cov_sign~trait_name)+
scale_color_manual(values=c("cornflowerblue", "pink", "sienna3"))+
theme_bw()+
labs(y="% of simulations", x="Peak", title= "Intergroup Trait Pairings")+
theme(text = element_text(size=15),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 10,  # Top margin
r = 20,  # Right margin
b = 10,  # Bottom margin
l = 10),
legend.key.size = unit(1,'cm'),
legend.key.width = unit(1.5,'cm'))
inter_peak+ annotate("text",
label = "My Text",
x = 25,
y = 85)
inter_peak+ annotate("text",
x = 25,
y = 85,
label = "My Text")
