o <- out_no_var[[j]]
storeMatrix.no.var.I[,j] <- o[,3]
}
## susceptible
storeMatrix.no.var.S <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.S[,j] <- o[,2]
}
## recovered
storeMatrix.no.var.R <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.R[,j] <- o[,4]
}
par(mfrow=c(1,3))
## no variation
plot(0:150, apply(storeMatrix.no.var.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="No Var")
lines(0:150, apply(storeMatrix.no.var.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.no.var.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## stratified variation
plot(0:150, apply(storeMatrix.varG.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Strat Var")
lines(0:150, apply(storeMatrix.varG.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.varG.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## continuous variation
plot(0:150, apply(storeMatrix.cont.varG.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Cont. Var")
lines(0:150, apply(storeMatrix.cont.varG.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.cont.varG.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
baselineparams_low = c(c=.5, shed=.5, alpha=.01, gamma=.01, beta=.0001, d=.001,
b=2.5, bs=.01, varA=.01,varB=.0001, varG=.01, varS=.01,
epsilon=0.05, epsilon_b=.0001)
###### RUN MULTIPLE SIMULATIONS ######
## no variation
source("GEM_SIR_noVar.R")
mclapply(seeds,
function(s) gillespie.SIR.noVar(tmax, baselineparams_low, initial_state, seed=s),
mc.cores=4) -> out_no_var
## stratified variation
source("GEM_SIR_alpha.variation.R")
mclapply(seeds,
function(s) gillespie.SIR.strat.varA(tmax, baselineparams_low, initial_state,seed=s),
mc.cores=4) -> out_strat_var_alpha
## continuous variation
source("GEM_SIR_alpha.variation.R")
mclapply(seeds,
function(s) gillespie.SIR.varA(tmax, baselineparams_low, initial_state,seed=s),
mc.cores=4) -> out_cont_var_alpha
## infected
timeSeq <- 0:150
storeMatrix.cont.varA.I <- array(NA, dim=c(length(timeSeq),length(out_cont_var_alpha)))
for (j in 1:length(out_cont_var_alpha)) {
o <- out_cont_var_alpha[[j]]
storeMatrix.cont.varA.I[,j] <- o[,3]
}
## susceptible
storeMatrix.cont.varA.S <- array(NA, dim=c(length(timeSeq),length(out_cont_var_alpha)))
for (j in 1:length(out_cont_var_alpha)) {
o <- out_cont_var_alpha[[j]]
storeMatrix.cont.varA.S[,j] <- o[,2]
}
## recovered
storeMatrix.cont.varA.R <- array(NA, dim=c(length(timeSeq),length(out_cont_var_alpha)))
for (j in 1:length(out_cont_var_alpha)) {
o <- out_cont_var_alpha[[j]]
storeMatrix.cont.varA.R[,j] <- o[,4]
}
## stratified variation
## infected
timeSeq <- 0:150
storeMatrix.alpha.I <- array(NA, dim=c(length(timeSeq),length(out_strat_var_alpha)))
for (j in 1:length(out_strat_var_alpha)) {
o <- out_strat_var_alpha[[j]]
storeMatrix.alpha.I[,j] <- o[,3]
}
## susceptible
storeMatrix.alpha.S <- array(NA, dim=c(length(timeSeq),length(out_strat_var_alpha)))
for (j in 1:length(out_strat_var_alpha)) {
o <- out_strat_var_alpha[[j]]
storeMatrix.alpha.S[,j] <- o[,2]
}
## recovered
storeMatrix.alpha.R <- array(NA, dim=c(length(timeSeq),length(out_strat_var_alpha)))
for (j in 1:length(out_strat_var_alpha)) {
o <- out_strat_var_alpha[[j]]
storeMatrix.alpha.R[,j] <- o[,4]
}
## no variation
## infected
timeSeq <- 0:150
storeMatrix.no.var.I <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.I[,j] <- o[,3]
}
## susceptible
storeMatrix.no.var.S <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.S[,j] <- o[,2]
}
## recovered
storeMatrix.no.var.R <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.R[,j] <- o[,4]
}
par(mfrow=c(1,3))
## no variation
plot(0:150, apply(storeMatrix.no.var.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="No Var")
lines(0:150, apply(storeMatrix.no.var.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.no.var.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## stratified variation
plot(0:150, apply(storeMatrix.alpha.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Strat Var")
lines(0:150, apply(storeMatrix.alpha.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.alpha.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## continous variation
plot(0:150, apply(storeMatrix.cont.varA.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Cont Var")
lines(0:150, apply(storeMatrix.cont.varA.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.cont.varA.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
baselineparams_int = c(c=.5, shed=1, alpha=.1, gamma=.1, beta=.005, d=.001,
b=2.5, bs=.01, varA=.1,varB=.0001, varG=.1, varS=.1,
epsilon=0.01, epsilon_b=.0001)
source("GEM_SIR_noVar.R")
mclapply(seeds,
function(s) gillespie.SIR.noVar(tmax, baselineparams_int, initial_state, seed=s),
mc.cores=4) -> out_no_var
## stratified variation
source("GEM_SIR_alpha.variation.R")
mclapply(seeds,
function(s) gillespie.SIR.strat.varA(tmax, baselineparams_int, initial_state,seed=s),
mc.cores=4) -> out_strat_var_alpha
## continuous variation
source("GEM_SIR_alpha.variation.R")
mclapply(seeds,
function(s) gillespie.SIR.varA(tmax, baselineparams_int, initial_state,seed=s),
mc.cores=4) -> out_cont_var_alpha
timeSeq <- 0:150
storeMatrix.cont.varA.I <- array(NA, dim=c(length(timeSeq),length(out_cont_var_alpha)))
for (j in 1:length(out_cont_var_alpha)) {
o <- out_cont_var_alpha[[j]]
storeMatrix.cont.varA.I[,j] <- o[,3]
}
## susceptible
storeMatrix.cont.varA.S <- array(NA, dim=c(length(timeSeq),length(out_cont_var_alpha)))
for (j in 1:length(out_cont_var_alpha)) {
o <- out_cont_var_alpha[[j]]
storeMatrix.cont.varA.S[,j] <- o[,2]
}
## recovered
storeMatrix.cont.varA.R <- array(NA, dim=c(length(timeSeq),length(out_cont_var_alpha)))
for (j in 1:length(out_cont_var_alpha)) {
o <- out_cont_var_alpha[[j]]
storeMatrix.cont.varA.R[,j] <- o[,4]
}
## stratified variation
## infected
timeSeq <- 0:150
storeMatrix.alpha.I <- array(NA, dim=c(length(timeSeq),length(out_strat_var_alpha)))
for (j in 1:length(out_strat_var_alpha)) {
o <- out_strat_var_alpha[[j]]
storeMatrix.alpha.I[,j] <- o[,3]
}
## susceptible
storeMatrix.alpha.S <- array(NA, dim=c(length(timeSeq),length(out_strat_var_alpha)))
for (j in 1:length(out_strat_var_alpha)) {
o <- out_strat_var_alpha[[j]]
storeMatrix.alpha.S[,j] <- o[,2]
}
## recovered
storeMatrix.alpha.R <- array(NA, dim=c(length(timeSeq),length(out_strat_var_alpha)))
for (j in 1:length(out_strat_var_alpha)) {
o <- out_strat_var_alpha[[j]]
storeMatrix.alpha.R[,j] <- o[,4]
}
## no variation
## infected
timeSeq <- 0:150
storeMatrix.no.var.I <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.I[,j] <- o[,3]
}
## susceptible
storeMatrix.no.var.S <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.S[,j] <- o[,2]
}
## recovered
storeMatrix.no.var.R <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.R[,j] <- o[,4]
}
par(mfrow=c(1,3))
## no variation
plot(0:150, apply(storeMatrix.no.var.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="No Var")
lines(0:150, apply(storeMatrix.no.var.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.no.var.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## stratified variation
plot(0:150, apply(storeMatrix.alpha.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Strat Var")
lines(0:150, apply(storeMatrix.alpha.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.alpha.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## continous variation
plot(0:150, apply(storeMatrix.cont.varA.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Cont Var")
lines(0:150, apply(storeMatrix.cont.varA.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.cont.varA.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
baselineparams_int = c(c=.5, shed=1, alpha=.1, gamma=.1, beta=.005, d=.001,
b=2.5, bs=.01, varA=.1,varB=.0001, varG=.1, varS=.1,
epsilon=0.01, epsilon_b=.0001)
source("GEM_SIR_noVar.R")
mclapply(seeds,
function(s) gillespie.SIR.noVar(tmax, baselineparams_int, initial_state),
mc.cores=4) -> out_no_var
## stratified variation
source("GEM_SIR_gamma.variation.R")
mclapply(seeds,
function(s) gillespie.SIR.strat.varG(tmax, baselineparams_int, initial_state),
mc.cores=4) -> out_strat_var_gamma
## continuous variation
source("GEM_SIR_gamma.variation.R")
mclapply(seeds,
function(s) gillespie.SIR.varG(tmax, baselineparams_int, initial_state),
mc.cores=4) -> out_cont_var_gamma
timeSeq <- 0:150
storeMatrix.cont.varG.I <- array(NA, dim=c(length(timeSeq),length(out_cont_var_gamma)))
for (j in 1:length(out_cont_var_gamma)) {
o <- out_cont_var_gamma[[j]]
storeMatrix.cont.varG.I[,j] <- o[,3]
}
## susceptible
storeMatrix.cont.varG.S <- array(NA, dim=c(length(timeSeq),length(out_cont_var_gamma)))
for (j in 1:length(out_cont_var_gamma)) {
o <- out_cont_var_gamma[[j]]
storeMatrix.cont.varG.S[,j] <- o[,2]
}
## recovered
storeMatrix.cont.varG.R <- array(NA, dim=c(length(timeSeq),length(out_cont_var_gamma)))
for (j in 1:length(out_cont_var_gamma)) {
o <- out_cont_var_gamma[[j]]
storeMatrix.cont.varG.R[,j] <- o[,4]
}
## stratified variation
## infected
timeSeq <- 0:150
storeMatrix.varG.I <- array(NA, dim=c(length(timeSeq),length(out_strat_var_gamma)))
for (j in 1:length(out_strat_var_gamma)) {
o <- out_strat_var_gamma[[j]]
storeMatrix.varG.I[,j] <- o[,3]
}
## susceptible
storeMatrix.varG.S <- array(NA, dim=c(length(timeSeq),length(out_strat_var_gamma)))
for (j in 1:length(out_strat_var_gamma)) {
o <- out_strat_var_gamma[[j]]
storeMatrix.varG.S[,j] <- o[,2]
}
## recovered
storeMatrix.varG.R <- array(NA, dim=c(length(timeSeq),length(out_strat_var_gamma)))
for (j in 1:length(out_strat_var_gamma)) {
o <- out_strat_var_gamma[[j]]
storeMatrix.varG.R[,j] <- o[,4]
}
## no variation
## infected
timeSeq <- 0:150
storeMatrix.no.var.I <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.I[,j] <- o[,3]
}
## susceptible
storeMatrix.no.var.S <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.S[,j] <- o[,2]
}
## recovered
storeMatrix.no.var.R <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.R[,j] <- o[,4]
}
par(mfrow=c(1,3))
## no variation
plot(0:150, apply(storeMatrix.no.var.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="No Var")
lines(0:150, apply(storeMatrix.no.var.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.no.var.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## stratified variation
plot(0:150, apply(storeMatrix.varG.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Strat Var")
lines(0:150, apply(storeMatrix.varG.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.varG.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## continuous variation
plot(0:150, apply(storeMatrix.cont.varG.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Cont. Var")
lines(0:150, apply(storeMatrix.cont.varG.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.cont.varG.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
baselineparams_int = c(c=.5, shed=1, alpha=.1, gamma=.1, beta=.005, d=.001,
b=2.5, bs=.01, varA=.1,varB=.0001, varG=.1, varS=.1,
epsilon=0.01, epsilon_b=.0001)
## no variation
source("GEM_SIR_noVar.R")
mclapply(seeds,
function(s) gillespie.SIR.noVar(tmax, baselineparams_int, initial_state, seed=s),
mc.cores=4) -> out_no_var
## stratified variation
source("GEM_SIR_beta.variation.R")
mclapply(seeds,
function(s) gillespie.SIR.strat.varB(tmax, baselineparams_int, initial_state, seed=s),
mc.cores=4) -> out_strat_var_beta
## continuous variation
source("GEM_SIR_beta.variation.R")
mclapply(seeds,
function(s) gillespie.SIR.varB(tmax, baselineparams_int, initial_state,seed=s),
mc.cores=4) -> out_cont_var_beta
###### FORMAT OUTPUT ######
## continuous variation
## infected
timeSeq <- 0:150
storeMatrix.cont.varB.I <- array(NA, dim=c(length(timeSeq),length(out_cont_var_beta)))
for (j in 1:length(out_cont_var_beta)) {
o <- out_cont_var_beta[[j]]
storeMatrix.cont.varB.I[,j] <- o[,3]
}
## susceptible
storeMatrix.cont.varB.S <- array(NA, dim=c(length(timeSeq),length(out_cont_var_beta)))
for (j in 1:length(out_cont_var_beta)) {
o <- out_cont_var_beta[[j]]
storeMatrix.cont.varB.S[,j] <- o[,2]
}
## recovered
storeMatrix.cont.varB.R <- array(NA, dim=c(length(timeSeq),length(out_cont_var_beta)))
for (j in 1:length(out_cont_var_beta)) {
o <- out_cont_var_beta[[j]]
storeMatrix.cont.varB.R[,j] <- o[,4]
}
## stratified variation
## infected
timeSeq <- 0:150
storeMatrix.beta.I <- array(NA, dim=c(length(timeSeq),length(out_strat_var_beta)))
for (j in 1:length(out_strat_var_beta)) {
o <- out_strat_var_beta[[j]]
storeMatrix.beta.I[,j] <- o[,3]
}
## susceptible
storeMatrix.beta.S <- array(NA, dim=c(length(timeSeq),length(out_strat_var_beta)))
for (j in 1:length(out_strat_var_beta)) {
o <- out_strat_var_beta[[j]]
storeMatrix.beta.S[,j] <- o[,2]
}
## recovered
storeMatrix.beta.R <- array(NA, dim=c(length(timeSeq),length(out_strat_var_beta)))
for (j in 1:length(out_strat_var_beta)) {
o <- out_strat_var_beta[[j]]
storeMatrix.beta.R[,j] <- o[,4]
}
## no variation
## infected
timeSeq <- 0:150
storeMatrix.no.var.I <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.I[,j] <- o[,3]
}
## susceptible
storeMatrix.no.var.S <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.S[,j] <- o[,2]
}
## recovered
storeMatrix.no.var.R <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.R[,j] <- o[,4]
}
par(mfrow=c(1,3))
## no variation
plot(0:150, apply(storeMatrix.no.var.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="No Var")
lines(0:150, apply(storeMatrix.no.var.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.no.var.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## stratified variation
plot(0:150, apply(storeMatrix.beta.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Strat Var")
lines(0:150, apply(storeMatrix.beta.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.beta.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## continuous variation
plot(0:150, apply(storeMatrix.cont.varB.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Cont Var")
lines(0:150, apply(storeMatrix.cont.varB.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.cont.varB.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
par(mfrow=c(1,3))
## no variation
plot(0:150, apply(storeMatrix.no.var.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="No Var")
lines(0:150, apply(storeMatrix.no.var.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.no.var.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## stratified variation
plot(0:150, apply(storeMatrix.beta.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Strat Var")
lines(0:150, apply(storeMatrix.beta.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.beta.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## continuous variation
plot(0:150, apply(storeMatrix.cont.varB.I[,-which(apply(storeMatrix.cont.varB.I, 2, function(col) any(is.na(col))))], 1, mean),
col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Cont. Var")
lines(0:150, apply(storeMatrix.cont.varB.S[,-which(apply(storeMatrix.cont.varB.S, 2, function(col) any(is.na(col))))], 1, mean),
col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.cont.varB.R[,-which(apply(storeMatrix.cont.varB.R, 2, function(col) any(is.na(col))))], 1, mean),
col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
baselineparams_int = c(c=.5, shed=1, alpha=.1, gamma=.1, beta=.005, d=.001,
b=2.5, bs=.01, varA=.1,varB=.0001, varG=.1, varS=.1,
epsilon=0.01, epsilon_b=.0001)
source("GEM_SIR_noVar.R")
mclapply(seeds,
function(s) gillespie.SIR.noVar(tmax, baselineparams_int, initial_state),
mc.cores=4) -> out_no_var
## stratified variation
source("GEM_SIR_shedding.variation.R")
mclapply(seeds,
function(s) gillespie.SIR.strat.varS(tmax, baselineparams_int, initial_state),
mc.cores=4) -> out_strat_var_shed
## continuous variation
source("GEM_SIR_shedding.variation.R")
mclapply(seeds,
function(s) gillespie.SIR.varS(tmax, baselineparams_int, initial_state),
mc.cores=4) -> out_cont_var_shed
timeSeq <- 0:150
storeMatrix.cont.varS.I <- array(NA, dim=c(length(timeSeq),length(out_cont_var_shed)))
for (j in 1:length(out_cont_var_shed)) {
o <- out_cont_var_shed[[j]]
storeMatrix.cont.varS.I[,j] <- o[,3]
}
## susceptible
storeMatrix.cont.varS.S <- array(NA, dim=c(length(timeSeq),length(out_cont_var_shed)))
for (j in 1:length(out_cont_var_shed)) {
o <- out_cont_var_shed[[j]]
storeMatrix.cont.varS.S[,j] <- o[,2]
}
## recovered
storeMatrix.cont.varS.R <- array(NA, dim=c(length(timeSeq),length(out_cont_var_shed)))
for (j in 1:length(out_cont_var_shed)) {
o <- out_cont_var_shed[[j]]
storeMatrix.cont.varS.R[,j] <- o[,4]
}
## stratified variation
## infected
timeSeq <- 0:150
storeMatrix.strat.varS.I <- array(NA, dim=c(length(timeSeq),length(out_strat_var_shed)))
for (j in 1:length(out_strat_var_shed)) {
o <- out_strat_var_shed[[j]]
storeMatrix.strat.varS.I[,j] <- o[,3]
}
## susceptible
storeMatrix.strat.varS.S <- array(NA, dim=c(length(timeSeq),length(out_strat_var_shed)))
for (j in 1:length(out_strat_var_shed)) {
o <- out_strat_var_shed[[j]]
storeMatrix.strat.varS.S[,j] <- o[,2]
}
## recovered
storeMatrix.strat.varS.R <- array(NA, dim=c(length(timeSeq),length(out_strat_var_shed)))
for (j in 1:length(out_strat_var_shed)) {
o <- out_strat_var_shed[[j]]
storeMatrix.strat.varS.R[,j] <- o[,4]
}
## no variation
## infected
timeSeq <- 0:150
storeMatrix.no.var.I <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.I[,j] <- o[,3]
}
## susceptible
storeMatrix.no.var.S <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.S[,j] <- o[,2]
}
## recovered
storeMatrix.no.var.R <- array(NA, dim=c(length(timeSeq),length(out_no_var)))
for (j in 1:length(out_no_var)) {
o <- out_no_var[[j]]
storeMatrix.no.var.R[,j] <- o[,4]
}
par(mfrow=c(1,3))
## no variation
plot(0:150, apply(storeMatrix.no.var.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="No Var")
lines(0:150, apply(storeMatrix.no.var.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.no.var.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## stratified variation
plot(0:150, apply(storeMatrix.strat.varS.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Strat Var")
lines(0:150, apply(storeMatrix.strat.varS.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.strat.varS.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
## continuous variation
plot(0:150, apply(storeMatrix.cont.varS.I, 1, mean), col="red", lwd=1.75, type="l", ylim=c(0,300), ylab="N", xlab="Time", main="Cont Var")
lines(0:150, apply(storeMatrix.cont.varS.S, 1, mean), col="blue", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
lines(0:150, apply(storeMatrix.cont.varS.R, 1, mean), col="green", lwd=1.75, type="l", ylim=c(0,150), ylab="N", xlab="Time")
legend("topright",legend=c("S","I","R"),fill=c("blue","red","green"), cex=0.25)
