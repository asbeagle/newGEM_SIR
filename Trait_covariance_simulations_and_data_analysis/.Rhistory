<<<<<<< HEAD
out_negcorr_hivar_alpha_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_hivar_alpha_gamma.RDS")
out_nocorr_hivar_alpha_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_hivar_alpha_gamma.RDS")
out_nocorr_hivar_alpha_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_hivar_alpha_gamma.RDS")
out_poscorr_hivar_alpha_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_hivar_alpha_gamma.RDS")
out_negcorr_medvar_alpha_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_medvar_alpha_gamma.RDS")
out_nocorr_medvar_alpha_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_medvar_alpha_gamma.RDS")
out_poscorr_medvar_alpha_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_medvar_alpha_gamma.RDS")
out_negcorr_lowvar_alpha_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_lowvar_alpha_gamma.RDS")
out_nocorr_lowvar_alpha_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_lowvar_alpha_gamma.RDS")
out_poscorr_lowvar_alpha_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_lowvar_alpha_gamma.RDS")
out_negcorr_hivar_c_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_hivar_c_alpha.RDS")
out_nocorr_hivar_c_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_hivar_c_alpha.RDS")
out_poscorr_hivar_c_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_hivar_c_alpha.RDS")
out_negcorr_medvar_c_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_medvar_c_alpha.RDS")
out_nocorr_medvar_c_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_medvar_c_alpha.RDS")
out_poscorr_medvar_c_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_medvar_c_alpha.RDS")
out_negcorr_lowvar_c_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_lowvar_c_alpha.RDS")
out_nocorr_lowvar_c_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_lowvar_c_alpha.RDS")
out_poscorr_lowvar_c_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_lowvar_c_alpha.RDS")
out_negcorr_hivar_c_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_hivar_c_gamma.RDS")
out_nocorr_hivar_c_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_hivar_c_gamma.RDS")
out_poscorr_hivar_c_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_hivar_c_gamma.RDS")
# med var
out_negcorr_medvar_c_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_medvar_c_gamma.RDS")
out_nocorr_medvar_c_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_medvar_c_gamma.RDS")
out_poscorr_medvar_c_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_medvar_c_gamma.RDS")
# low var
out_negcorr_lowvar_c_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_lowvar_c_gamma.RDS")
out_nocorr_lowvar_c_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_lowvar_c_gamma.RDS")
out_poscorr_lowvar_c_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_lowvar_c_gamma.RDS")
out_negcorr_hivar_c_shed <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_hivar_c_shed.RDS")
out_nocorr_hivar_c_shed <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_hivar_c_shed.RDS")
out_poscorr_hivar_c_shed <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_hivar_c_shed.RDS")
# med var
out_negcorr_medvar_c_shed <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_medvar_c_shed.RDS")
out_nocorr_medvar_c_shed <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_medvar_c_shed.RDS")
out_poscorr_medvar_c_shed <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_medvar_c_shed.RDS")
# low var
out_negcorr_lowvar_c_shed <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_lowvar_c_shed.RDS")
out_nocorr_lowvar_c_shed <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_lowvar_c_shed.RDS")
out_poscorr_lowvar_c_shed <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_lowvar_c_shed.RDS")
out_negcorr_hivar_shed_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_hivar_shed_alpha.RDS")
## shed alpha
# hi var
out_negcorr_hivar_shed_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_hivar_shed_alpha.RDS")
out_nocorr_hivar_shed_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_hivar_shed_alpha.RDS")
out_poscorr_hivar_shed_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_hivar_shed_alpha.RDS")
# med var
out_negcorr_medvar_shed_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_medvar_shed_alpha.RDS")
out_nocorr_medvar_shed_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_medvar_shed_alpha.RDS")
out_poscorr_medvar_shed_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_medvar_shed_alpha.RDS")
out_negcorr_lowvar_shed_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_lowvar_shed_alpha.RDS")
out_nocorr_lowvar_shed_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_lowvar_shed_alpha.RDS")
out_poscorr_lowvar_shed_alpha <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_lowvar_shed_alpha.RDS")
out_negcorr_hivar_shed_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_hivar_shed_gamma.RDS")
out_nocorr_hivar_shed_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_hivar_shed_gamma.RDS")
out_poscorr_hivar_shed_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_hivar_shed_gamma.RDS")
# med var
out_negcorr_medvar_shed_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_medvar_shed_gamma.RDS")
out_nocorr_medvar_shed_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_medvar_shed_gamma.RDS")
out_poscorr_medvar_shed_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_medvar_shed_gamma.RDS")
# low var
out_negcorr_lowvar_shed_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_negcorr_lowvar_shed_gamma.RDS")
out_nocorr_lowvar_shed_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_nocorr_lowvar_shed_gamma.RDS")
out_poscorr_lowvar_shed_gamma <- readRDS("~/newGEM_SIR/Analysis Code/Covariation/out_poscorr_lowvar_shed_gamma.RDS")
library(reticulate)
installed.packages()
1/.002
500/2
1/.000018
597*.1575
597*.1575+(597)
setwd("/Users/alexisbeagle/newGEM_SIR/Analysis Code/Covariation/New_simulations")
library(tidyverse)
library(MASS)
library(ggplot2)
library(cowplot)
library(ggpubr)
library(ggtext)
library(magrittr)
setwd("/Users/alexisbeagle/newGEM_SIR/Trait_covariance_simulations_and_data_analysis")
library(tidyverse)
library(magrittr)
library(MASS)
9-4
1400+1200+600+300+1246+400+246+700+287
6379+800+3500+2450
800+3500+2450
library(tidyverse)
library(magrittr)
library(MASS)
## Empirical cumulative density function plots
## (Technically, 1-ECDF!)
## R0 = 1 plots
var1=c('c',    'c',    'shed', 'shed', 'c',   'alpha')
var2=c('gamma','alpha','gamma','alpha','shed','gamma')
i <- 1
data <- vector(mode='list', length=18)
for (j in 1:6) { ## loop over the six different covariance combinations
for (covMatrix in c("nocorr", "negcorr", "poscorr")) {
z1 = readRDS(paste0(paste("out_R=1",covMatrix,"hivar",var1[j],var2[j],sep="_"),".RDS"))
z2 = readRDS(paste0(paste("out_R=1",covMatrix,"medvar",var1[j],var2[j],sep="_"),".RDS"))
z3 = readRDS(paste0(paste("out_R=1",covMatrix,"lowvar",var1[j],var2[j],sep="_"),".RDS"))
## Provide a label for each plot panel
panel <- paste0(LETTERS[j],switch(covMatrix,poscorr="(3)",negcorr="(1)",nocorr="(2)"))
## Give nicer names
covMatrix <- switch(covMatrix,poscorr="(+) Cov",negcorr="(-) Cov",nocorr="(0) Cov")
trait1 <- switch(var1[j],c="Contact",shed="Infectiousness",alpha="Virulence")
trait2 <- switch(var2[j],shed="Infectiousness",alpha="Virulence",gamma="Recovery")
z <- vector(mode='list',length=3)
lapply(1:length(z1), function(i) data.frame(peakSize=max(z1[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
peakPrev=max(z1[[i]][[1]]$I/(z1[[i]][[1]]$S+z1[[i]][[1]]$I+z1[[i]][[1]]$R),na.rm=TRUE),
disp=ifelse(max(z1[[i]][[1]]$t)>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
fadeout=ifelse(length(z1[[i]][[1]]$t)<99, 1, 0), # binary: did this replicate go extinct?
rep=i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="high",cov=covMatrix, traits=paste(trait1,trait2,sep="-"), panelLab=panel) -> z[[1]]
lapply(1:length(z2), function(i) data.frame(peakSize=max(z2[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
peakPrev=max(z2[[i]][[1]]$I/(z2[[i]][[1]]$S+z2[[i]][[1]]$I+z2[[i]][[1]]$R),na.rm=TRUE),
disp=ifelse(max(z2[[i]][[1]]$t)>99, glm.nb(z2[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
fadeout=ifelse(length(z2[[i]][[1]]$t)<99, 1, 0),
rep=i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="med",cov=covMatrix, traits=paste(trait1,trait2,sep="-"), panelLab=panel) -> z[[2]]
lapply(1:length(z3), function(i) data.frame(peakSize=max(z3[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
peakPrev=max(z3[[i]][[1]]$I/(z3[[i]][[1]]$S+z3[[i]][[1]]$I+z3[[i]][[1]]$R),na.rm=TRUE),
disp=ifelse(max(z3[[i]][[1]]$t)>99, glm.nb(z3[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
fadeout=ifelse(length(z3[[i]][[1]]$t)<99, 1, 0),
rep=i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="low",cov=covMatrix, traits=paste(trait1,trait2,sep="-"), panelLab=panel) -> z[[3]]
data[[i]] <- do.call("rbind.data.frame",z)
i <- i+1
}
}
data <- do.call("rbind.data.frame",data)
data$cov <- factor(data$cov, levels=c("(-) Cov","(0) Cov","(+) Cov"))
data$Variance <- factor(data$Variance, levels=c("low","med","high"))
data$traits <- factor(data$traits, levels=c("Contact-Recovery","Contact-Virulence","Infectiousness-Recovery","Infectiousness-Virulence","Contact-Infectiousness","Virulence-Recovery"))
# compute the fraction of replicates that make it to each epidemic size
data %>% group_by(Variance, cov, traits) %>% summarise(size=seq(0,max(data$peakSize)+2), ECDF=sapply(seq(0,max(data$peakSize)+2), function(i) sum(peakSize>=i)/100)) -> data2
# compute the fraction of replicates that make it to each epidemic prevalence
data %>% group_by(Variance, cov, traits) %>% summarise(size=seq(0,max(data$peakPrev)+0.02,0.01), ECDF=sapply(seq(0,max(data$peakPrev)+0.02,0.01), function(i) sum(peakPrev>=i)/100)) -> data3
head(data)
# compute the fraction of replicates that make it to each epidemic size
data %>% group_by(Variance, cov, traits) %>% reframe(size=seq(0,max(data$peakSize)+2), ECDF=sapply(seq(0,max(data$peakSize)+2), function(i) sum(peakSize>=i)/100)) -> data2
# compute the fraction of replicates that make it to each epidemic prevalence
data %>% group_by(Variance, cov, traits) %>% reframe(size=seq(0,max(data$peakPrev)+0.02,0.01), ECDF=sapply(seq(0,max(data$peakPrev)+0.02,0.01), function(i) sum(peakPrev>=i)/100)) -> data3
head(data2)
head(datat3)
head(data3)
ggplot(data2, aes(x=size, y=ECDF, group=Variance, colour=Variance)) +
geom_line(size=0.8) +
facet_grid(cov~traits) +
ylim(0,1.05) +
geom_text(data=subset(data %>% group_by(Variance, cov, traits) %>% summarise(pan=unique(panelLab)),Variance=='high'),
mapping=aes(x=2, y=1.03, label=pan),color='black', size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="low"),
mapping=aes(x=120, y=1.03, label=lab, color=Variance), size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="med"),
mapping=aes(x=120, y=0.93, label=lab, color=Variance), size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="high"),
mapping=aes(x=120, y=0.83, label=lab, color=Variance), size=2.5, hjust=0) +
xlab("Epidemic size") +
ylab(expression("%"~of~simulations~(italic(R)[0]==1))) +
ggtitle("Intergroup trait pairings                                                                                                                             Intragroup trait pairings") +
theme_bw() +
theme(axis.text=element_text(size=6), axis.title=element_text(size=8), legend.text=element_text(size=7), legend.title=element_text(size=8), plot.title = element_text(size=8), strip.text.x = element_text(size = 7), strip.text.y = element_text(size = 7)) +
scale_color_manual(values=c("cornflowerblue", "pink", "sienna")) +
scale_fill_manual(values=c("cornflowerblue", "pink", "sienna"))
ggplot(data2, aes(x=size, y=log(ECDF), group=Variance, colour=Variance)) +
geom_line(size=0.8) +
facet_grid(cov~traits) +
ylim(0,1.05) +
geom_text(data=subset(data %>% group_by(Variance, cov, traits) %>% summarise(pan=unique(panelLab)),Variance=='high'),
mapping=aes(x=2, y=1.03, label=pan),color='black', size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="low"),
mapping=aes(x=120, y=1.03, label=lab, color=Variance), size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="med"),
mapping=aes(x=120, y=0.93, label=lab, color=Variance), size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="high"),
mapping=aes(x=120, y=0.83, label=lab, color=Variance), size=2.5, hjust=0) +
xlab("Epidemic size") +
ylab(expression("%"~of~simulations~(italic(R)[0]==1))) +
ggtitle("Intergroup trait pairings                                                                                                                             Intragroup trait pairings") +
theme_bw() +
theme(axis.text=element_text(size=6), axis.title=element_text(size=8), legend.text=element_text(size=7), legend.title=element_text(size=8), plot.title = element_text(size=8), strip.text.x = element_text(size = 7), strip.text.y = element_text(size = 7)) +
scale_color_manual(values=c("cornflowerblue", "pink", "sienna")) +
scale_fill_manual(values=c("cornflowerblue", "pink", "sienna"))
ggplot(data2, aes(x=log(size), y=log(ECDF), group=Variance, colour=Variance)) +
geom_line(size=0.8) +
facet_grid(cov~traits) +
ylim(0,1.05) +
geom_text(data=subset(data %>% group_by(Variance, cov, traits) %>% summarise(pan=unique(panelLab)),Variance=='high'),
mapping=aes(x=2, y=1.03, label=pan),color='black', size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="low"),
mapping=aes(x=120, y=1.03, label=lab, color=Variance), size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="med"),
mapping=aes(x=120, y=0.93, label=lab, color=Variance), size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="high"),
mapping=aes(x=120, y=0.83, label=lab, color=Variance), size=2.5, hjust=0) +
xlab("Epidemic size") +
ylab(expression("%"~of~simulations~(italic(R)[0]==1))) +
ggtitle("Intergroup trait pairings                                                                                                                             Intragroup trait pairings") +
theme_bw() +
theme(axis.text=element_text(size=6), axis.title=element_text(size=8), legend.text=element_text(size=7), legend.title=element_text(size=8), plot.title = element_text(size=8), strip.text.x = element_text(size = 7), strip.text.y = element_text(size = 7)) +
scale_color_manual(values=c("cornflowerblue", "pink", "sienna")) +
scale_fill_manual(values=c("cornflowerblue", "pink", "sienna"))
ggplot(data2, aes(x=log(size), y=log(ECDF), group=Variance, colour=Variance)) +
geom_line(size=0.8) +
facet_grid(cov~traits) +
ylim(0,1.05)
ggplot(data2, aes(x=ln(size), y=ln(ECDF), group=Variance, colour=Variance)) +
geom_line(size=0.8) +
facet_grid(cov~traits) +
ylim(0,1.05)
ggplot(data2, aes(x=log(size, base=10), y=log(ECDF, base=10), group=Variance, colour=Variance)) +
geom_line(size=0.8) +
facet_grid(cov~traits) +
ylim(0,1.05)
ggplot(data2, aes(x=size, y=ECDF, group=Variance, colour=Variance)) +
geom_line(size=0.8) +
facet_grid(cov~traits) +
ylim(0,1.05) +
geom_text(data=subset(data %>% group_by(Variance, cov, traits) %>% summarise(pan=unique(panelLab)),Variance=='high'),
mapping=aes(x=2, y=1.03, label=pan),color='black', size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="low"),
mapping=aes(x=120, y=1.03, label=lab, color=Variance), size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="med"),
mapping=aes(x=120, y=0.93, label=lab, color=Variance), size=2.5, hjust=0) +
geom_text(data=subset(data %>%
group_by(Variance, cov, traits) %>%
summarise(fadeoutFrac=sum(fadeout==1)/100) %>%
mutate(lab=paste0("Pr","=",fadeoutFrac)),
Variance=="high"),
mapping=aes(x=120, y=0.83, label=lab, color=Variance), size=2.5, hjust=0) +
xlab("Epidemic size") +
ylab(expression("%"~of~simulations~(italic(R)[0]==1))) +
ggtitle("Intergroup trait pairings                                                                                                                             Intragroup trait pairings") +
theme_bw() +
theme(axis.text=element_text(size=6), axis.title=element_text(size=8), legend.text=element_text(size=7), legend.title=element_text(size=8), plot.title = element_text(size=8), strip.text.x = element_text(size = 7), strip.text.y = element_text(size = 7)) +
scale_color_manual(values=c("cornflowerblue", "pink", "sienna")) +
scale_fill_manual(values=c("cornflowerblue", "pink", "sienna"))
## R0 = 8 plots
var1=c('c',    'c',    'shed', 'shed', 'c',   'alpha')
var2=c('gamma','alpha','gamma','alpha','shed','gamma')
i <- 1
data <- vector(mode='list', length=18)
for (j in 1:6) { ## loop over the six different covariance combinations
for (covMatrix in c("nocorr", "negcorr", "poscorr")) {
z1 = readRDS(paste0(paste("out_R=8",covMatrix,"hivar",var1[j],var2[j],sep="_"),".RDS"))
z2 = readRDS(paste0(paste("out_R=8",covMatrix,"medvar",var1[j],var2[j],sep="_"),".RDS"))
z3 = readRDS(paste0(paste("out_R=8",covMatrix,"lowvar",var1[j],var2[j],sep="_"),".RDS"))
## Provide a label for each plot panel
panel <- paste0(LETTERS[j],switch(covMatrix,poscorr="(3)",negcorr="(1)",nocorr="(2)"))
## Give nicer names
covMatrix <- switch(covMatrix,poscorr="(+) Cov",negcorr="(-) Cov",nocorr="(0) Cov")
trait1 <- switch(var1[j],c="Contact",shed="Infectiousness",alpha="Virulence")
trait2 <- switch(var2[j],shed="Infectiousness",alpha="Virulence",gamma="Recovery")
z <- vector(mode='list',length=3)
lapply(1:length(z1), function(i) data.frame(peakSize=max(z1[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
peakPrev=max(z1[[i]][[1]]$I/(z1[[i]][[1]]$S+z1[[i]][[1]]$I+z1[[i]][[1]]$R),na.rm=TRUE),
disp=ifelse(max(z1[[i]][[1]]$t)>99, glm.nb(z1[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
fadeout=ifelse(length(z1[[i]][[1]]$t)<99, 1, 0), # binary: did this replicate go extinct?
rep=i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="high",cov=covMatrix, traits=paste(trait1,trait2,sep="-"), panelLab=panel) -> z[[1]]
lapply(1:length(z2), function(i) data.frame(peakSize=max(z2[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
peakPrev=max(z2[[i]][[1]]$I/(z2[[i]][[1]]$S+z2[[i]][[1]]$I+z2[[i]][[1]]$R),na.rm=TRUE),
disp=ifelse(max(z2[[i]][[1]]$t)>99, glm.nb(z2[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
fadeout=ifelse(length(z2[[i]][[1]]$t)<99, 1, 0),
rep=i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="med",cov=covMatrix, traits=paste(trait1,trait2,sep="-"), panelLab=panel) -> z[[2]]
lapply(1:length(z3), function(i) data.frame(peakSize=max(z3[[i]][[1]]$I,na.rm=TRUE), ## peak epidemic size
peakPrev=max(z3[[i]][[1]]$I/(z3[[i]][[1]]$S+z3[[i]][[1]]$I+z3[[i]][[1]]$R),na.rm=TRUE),
disp=ifelse(max(z3[[i]][[1]]$t)>99, glm.nb(z3[[i]][[2]]$numInf~1)$theta, NA), ## dispersion parameter of negative binomial distribution fit to numInf
fadeout=ifelse(length(z3[[i]][[1]]$t)<99, 1, 0),
rep=i)) %>%
do.call("rbind.data.frame",.) %>%
mutate(., Variance="low",cov=covMatrix, traits=paste(trait1,trait2,sep="-"), panelLab=panel) -> z[[3]]
data[[i]] <- do.call("rbind.data.frame",z)
i <- i+1
}
}
166*2
=======
data.frame(peak=max(o[[2]][,2]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>%
do.call("rbind.data.frame",.)) -> OutC
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>%
do.call("rbind.data.frame",.)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>%
do.call("rbind.data.frame",.)) -> OutC
lapply(outC,
function(O)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.)
) -> OutC
OutC[[1]]
OutC[[1]][,5]
OutC[[2]][,5]
OutC[[5]][,5]
OutC[[9]][,5]
OutC[[100]][,5]
OutC[[9]][,5]
OutC[[9]]
outC[[9]]
R = 8
CV = 5
## baseline parameters
b = 2.5; bs=0.01; d=0.1; c=0.1; s=1/9; a=0.1; g=0.1
## scaling coefficient x to scale c, s, a, and g to achieve particular R value
x = 1/(2*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)) * (-a*bs*R-bs*g*R-2*b*c*s+2*c*d*s+bs*d*R*s+sqrt((a*bs*R+bs*g*R+2*b*c*s-2*c*d*s-bs*d*R*s)^2-4*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)*(a*bs*R+bs*d*R+bs*g*R-b*c*s+c*d*s+a*bs*R*s+bs*d*R*s+bs*g*R*s)))
x
## simulation parameters
params = c(b=2.5, bs=0.01, d=0.1,
c=(1-x)*0.1, s=(1-x)*1/9, a=(1+x)*0.1, g=(1+x)*0.1,
SD=CV*(1-x)*0.1)
params
SIRvarG(params, initial_state, 50) -> gg
gg
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
?rlnorm
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
SIRvarG(params, initial_state, 50) -> gg
gg[[3]]
gg[[3]][,2]
gg[[3]][,2] %>% range
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
SIRvarG(params, initial_state, 50) -> gg
gg[[3]][,2] %>% range
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
paramsCS = c(b=2.5, bs=0.01, d=0.1,
c=0.1, s=1/9, a=0.1, g=0.1,
cSD=0.0001, sSD=0.0001,
corr=0.5)
tic <- Sys.time()
for (i in 1:10)
outCS = SIRcovCS(paramsCS, x, 100)
paramsCS = c(b=2.5, bs=0.01, d=0.1,
c=0.1, s=1/9, a=0.1, g=0.1,
cSD=0.0001, sSD=0.0001,
corr=0.5)
tic <- Sys.time()
for (i in 1:10)
out = SIRcovCS(params, c(S=230, I=10, R=0), 50)
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
paramsCA = c(b=2.5, bs=0.01, d=0.1,
c=0.1, s=1/9, a=0.1, g=0.1,
cSD=0.0001, aSD=0.0001,
corr=0.5)
outCA = SIRcovCA(paramsCA, x, 50)
x = c(S=230, I=10, R=0)
paramsCA = c(b=2.5, bs=0.01, d=0.1,
c=0.1, s=1/9, a=0.1, g=0.1,
cSD=0.0001, aSD=0.0001,
corr=0.5)
outCA = SIRcovCA(paramsCA, x, 50)
x = c(S=230, I=10, R=0)
## No variation simulations (should all be very similar)
paramsCS = c(b=2.5, bs=0.01, d=0.1,
c=0.1, s=1/9, a=0.1, g=0.1,
cSD=0.0001, sSD=0.0001,
corr=0.5)
tic <- Sys.time()
for (i in 1:10)
outCS = SIRcovCS(paramsCS, x, 100)
toc <- Sys.time()
toc - tic
tic <- Sys.time()
for (i in 1:10)
outCS = SIRcovCS2(paramsCS, x, 100)
toc <- Sys.time()
toc - tic
R = 8
CV = 5
## baseline parameters
b = 2.5; bs=0.01; d=0.1; c=0.1; s=1/9; a=0.1; g=0.1
## scaling coefficient x to scale c, s, a, and g to achieve particular R value
x = 1/(2*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)) * (-a*bs*R-bs*g*R-2*b*c*s+2*c*d*s+bs*d*R*s+sqrt((a*bs*R+bs*g*R+2*b*c*s-2*c*d*s-bs*d*R*s)^2-4*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)*(a*bs*R+bs*d*R+bs*g*R-b*c*s+c*d*s+a*bs*R*s+bs*d*R*s+bs*g*R*s)))
## simulation parameters
params = c(b=2.5, bs=0.01, d=0.1,
c=(1-x)*0.1, s=(1-x)*1/9, a=(1+x)*0.1, g=(1+x)*0.1,
SD=CV*(1-x)*0.1)
## initial conditions
initial_state <- floor(c(S=unname(((params["b"]-params["d"])/params["bs"]))-5, I=5, R=0))
lapply(1:10, function(i) SIRvarC(params, initial_state, 50)) -> outC
outC[[1]]
outC[[1]][[1]]
outC[[1]][[1]] %>% tail
outC[[1]][[2]] %>% tail
plot(out[[1]][[1]], outC[[1]][[2]][,2], type='l')
plot(outC[[1]][[1]], outC[[1]][[2]][,2], type='l')
outC[[3]]
outC[[3]][,3]
outC[[1]][[3]]
outC[[1]][[3]][,3]
outC[[1]][[3]][,3] %>% range
glm.nb(outC[[1]][[3]][,3]~1)
glm.nb(outC[[1]][[3]][,3]~1)$theta
fitdistr(outC[[1]][[3]][,3])
fitdistr(outC[[1]][[3]][,3], densfun="negative binomial")
outC <- outS <- outA <- outG <- vector(mode='list', length=9)
j = 1
for (R in c(1,4,8)) {
for (CV in c(.2, 1, 5)) {
print(CV)
print(R)
## baseline parameters
b = 2.5; bs=0.01; d=0.1; c=0.1; s=1/9; a=0.1; g=0.1
## scaling coefficient x to scale c, s, a, and g to achieve particular R value
x = 1/(2*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)) * (-a*bs*R-bs*g*R-2*b*c*s+2*c*d*s+bs*d*R*s+sqrt((a*bs*R+bs*g*R+2*b*c*s-2*c*d*s-bs*d*R*s)^2-4*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)*(a*bs*R+bs*d*R+bs*g*R-b*c*s+c*d*s+a*bs*R*s+bs*d*R*s+bs*g*R*s)))
## simulation parameters
params = c(b=2.5, bs=0.01, d=0.1,
c=(1-x)*0.1, s=(1-x)*1/9, a=(1+x)*0.1, g=(1+x)*0.1,
SD=CV*(1-x)*0.1)
## initial conditions
initial_state <- floor(c(S=unname(((params["b"]-params["d"])/params["bs"]))-5, I=5, R=0))
## simulate!
lapply(1:1000, function(i) SIRvarC(params, initial_state, 50)) -> outC[[j]]
lapply(1:1000, function(i) SIRvarS(params, initial_state, 50)) -> outS[[j]]
lapply(1:1000, function(i) SIRvarA(params, initial_state, 50)) -> outA[[j]]
lapply(1:1000, function(i) SIRvarG(params, initial_state, 50)) -> outG[[j]]
j = j+1
}
}
O = outC[[1]]
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.) -> ooo
ooo
o = O[[5]]
o
o[[3]]
o[[3]][is.na(o[[3]][,4]),3]
o[[3]][is.na(o[[3]][,3]),2]
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.) -> ooo
O
O = outC[[1]]
o = O[[1]]
o = O[[4]]
o = O[[5]]
sum(o[[3]][,4])
o[[3]]
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.) -> ooo
ooo
lapply(outC,
function(O)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.)
) -> OutC
length(OutC)
lapply(outS,
function(O)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.)
) -> OutS
lapply(outA,
function(O)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.)
) -> OutA
lapply(outG,
function(O)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.)
) -> OutG
head(OutG)
OutC %<>% do.call("rbind.data.frame",.)
OutC$R0 <- rep(c(1, 4, 8), each=3000)
OutC$CV <- rep(rep(c(0.2,1,5), each=1000),3)
OutS %<>% do.call("rbind.data.frame",.)
OutS$R0 <- rep(c(1, 4, 8), each=3000)
OutS$CV <- rep(rep(c(0.2,1,5), each=1000),3)
OutA %<>% do.call("rbind.data.frame",.)
OutA$R0 <- rep(c(1, 4, 8), each=3000)
OutA$CV <- rep(rep(c(0.2,1,5), each=1000),3)
OutG %<>% do.call("rbind.data.frame",.)
OutG$R0 <- rep(c(1, 4, 8), each=3000)
OutG$CV <- rep(rep(c(0.2,1,5), each=1000),3)
dim(OutG)
head(OutG)
OutG[990:1010,]
tail(OutG)
tail(OutA)
tail(OutS)
tail(OutC)
ggplot(OutC, aes(y=peak)) + geom_histogram() + facet_grid(R0~CV)
ggplot(OutC, aes(x=peak)) + geom_histogram() + facet_grid(R0~CV)
ggplot(OutC, aes(x=peak)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
paste0("R0=",c(1,4,8))
OutG$R0 <- rep(paste0("R0=",c(1,4,8)), each=3000)
OutG$CV <- rep(paste0("CV=",rep(c(0.2,1,5)), each=1000),3)
OutC$R0 <- rep(paste0("R0=",c(1,4,8)), each=3000)
OutC$CV <- rep(paste0("CV=",rep(c(0.2,1,5)), each=1000),3)
ggplot(OutC, aes(x=peak)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
OutC$CV <- rep(rep(paste0("CV=",c(0.2,1,5)), each=1000),3)
OutC$CV <- rep(rep(paste0("CV=",c(0.2,1,5)), each=1000),3)
ggplot(OutC, aes(x=peak)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
saveRDS(OutC, file="Variance_in_contact_results_12-28-23.RDS")
saveRDS(OutS, file="Variance_in_shedding_results_12-28-23.RDS")
saveRDS(OutC, file="Variance_in_virulence_results_12-28-23.RDS")
saveRDS(OutA, file="Variance_in_virulence_results_12-28-23.RDS")
saveRDS(OutG, file="Variance_in_recovery_results_12-28-23.RDS")
png(file="Variance_in_contact_peaks.png", height=5, width=5, units='in', res=300)
ggplot(OutC, aes(x=peak)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
dev.off()
ggplot(OutC, aes(x=disp)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
OutC$disp
OutC$disp %>% range(., na.rm=T)
filter(OutC, disp > 2)
filter(OutC, disp > 1.5)
filter(OutC, disp > 1)
filter(OutC, disp > 1.5)
ggplot(OutC, aes(x=disp)) + geom_histogram() + facet_grid(R0~CV) + xlim(0,1.5) + theme_bw()
ggplot(OutC, aes(x=disp, group=CV, color=CV)) + geom_histogram() + facet_grid(~R0) + xlim(0,1.5) + theme_bw()
ggplot(OutC, aes(x=disp, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + xlim(0,1.5) + theme_bw()
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + theme_bw()
ggplot(OutC, aes(x=peak, group=CV, fill=CV, alpha=0.5)) + geom_histogram() + facet_grid(~R0) + theme_bw()
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + theme_bw()
png(file="Variance_in_contact_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + theme_bw()
dev.off()
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + + scale_fill_manual(values=cbPalette)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + + scale_fill_manual(values=cbPalette)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + scale_fill_manual(values=cbPalette)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + scale_fill_manual(values=cbPalette)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + scale_fill_manual(values=cbPalette)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + scale_fill_manual(values=cbPalette)
+ theme(legend.position="bottom")
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme(legend.position="bottom")
png(file="Variance_in_contact_peaks.png", height=4, width=5, units='in', res=300)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme(legend.position="bottom")
dev.off()
ggplot(OutC, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme(legend.position="bottom") +
xlim(0,1.5) +
theme_bw()
ggplot(OutC, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
png(file="Variance_in_contact_peaks.png", height=4, width=5, units='in', res=300)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_contact_dispersion.png", height=3, width=5, units='in', res=300)
ggplot(OutC, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
dev.off()
png(file="Variance_in_contact_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_shedding_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutS, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_shedding_dispersion.png", height=3, width=5, units='in', res=300)
ggplot(OutS, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
dev.off()
OutS$R0 <- rep(paste0("R0=",c(1,4,8)), each=3000)
OutS$CV <- rep(rep(paste0("CV=",c(0.2,1,5)), each=1000),3)
saveRDS(OutS, file="Variance_in_shedding_results_12-28-23.RDS")
ggplot(OutS, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
png(file="Variance_in_shedding_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutS, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_shedding_dispersion.png", height=3, width=5, units='in', res=300)
ggplot(OutS, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
dev.off()
OutA$R0 <- rep(paste0("R0=",c(1,4,8)), each=3000)
OutA$CV <- rep(rep(paste0("CV=",c(0.2,1,5)), each=1000),3)
saveRDS(OutA, file="Variance_in_virulence_results_12-28-23.RDS")
png(file="Variance_in_virulence_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutA, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_virulence_dispersion.png", height=3, width=5, units='in', res=300)
ggplot(OutA, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
dev.off()
OutG$CV <- rep(rep(paste0("CV=",c(0.2,1,5)), each=1000),3)
saveRDS(OutG, file="Variance_in_recovery_results_12-28-23.RDS")
png(file="Variance_in_recovery_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutG, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_recovery_dispersion.png", height=3, width=5, units='in', res=300)
ggplot(OutG, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
dev.off()
>>>>>>> ab26d0d290e5e56f33cac9198cb5d9b065158022
