data.frame(peak=max(o[[2]][,2]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>%
do.call("rbind.data.frame",.)) -> OutC
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>%
do.call("rbind.data.frame",.)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>%
do.call("rbind.data.frame",.)) -> OutC
lapply(outC,
function(O)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.)
) -> OutC
OutC[[1]]
OutC[[1]][,5]
OutC[[2]][,5]
OutC[[5]][,5]
OutC[[9]][,5]
OutC[[100]][,5]
OutC[[9]][,5]
OutC[[9]]
outC[[9]]
R = 8
CV = 5
## baseline parameters
b = 2.5; bs=0.01; d=0.1; c=0.1; s=1/9; a=0.1; g=0.1
## scaling coefficient x to scale c, s, a, and g to achieve particular R value
x = 1/(2*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)) * (-a*bs*R-bs*g*R-2*b*c*s+2*c*d*s+bs*d*R*s+sqrt((a*bs*R+bs*g*R+2*b*c*s-2*c*d*s-bs*d*R*s)^2-4*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)*(a*bs*R+bs*d*R+bs*g*R-b*c*s+c*d*s+a*bs*R*s+bs*d*R*s+bs*g*R*s)))
x
## simulation parameters
params = c(b=2.5, bs=0.01, d=0.1,
c=(1-x)*0.1, s=(1-x)*1/9, a=(1+x)*0.1, g=(1+x)*0.1,
SD=CV*(1-x)*0.1)
params
SIRvarG(params, initial_state, 50) -> gg
gg
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
?rlnorm
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
SIRvarG(params, initial_state, 50) -> gg
gg[[3]]
gg[[3]][,2]
gg[[3]][,2] %>% range
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
SIRvarG(params, initial_state, 50) -> gg
gg[[3]][,2] %>% range
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
paramsCS = c(b=2.5, bs=0.01, d=0.1,
c=0.1, s=1/9, a=0.1, g=0.1,
cSD=0.0001, sSD=0.0001,
corr=0.5)
tic <- Sys.time()
for (i in 1:10)
outCS = SIRcovCS(paramsCS, x, 100)
paramsCS = c(b=2.5, bs=0.01, d=0.1,
c=0.1, s=1/9, a=0.1, g=0.1,
cSD=0.0001, sSD=0.0001,
corr=0.5)
tic <- Sys.time()
for (i in 1:10)
out = SIRcovCS(params, c(S=230, I=10, R=0), 50)
## Stochastic run in Rcpp
sourceCpp("SIRcov.cpp")
paramsCA = c(b=2.5, bs=0.01, d=0.1,
c=0.1, s=1/9, a=0.1, g=0.1,
cSD=0.0001, aSD=0.0001,
corr=0.5)
outCA = SIRcovCA(paramsCA, x, 50)
x = c(S=230, I=10, R=0)
paramsCA = c(b=2.5, bs=0.01, d=0.1,
c=0.1, s=1/9, a=0.1, g=0.1,
cSD=0.0001, aSD=0.0001,
corr=0.5)
outCA = SIRcovCA(paramsCA, x, 50)
x = c(S=230, I=10, R=0)
## No variation simulations (should all be very similar)
paramsCS = c(b=2.5, bs=0.01, d=0.1,
c=0.1, s=1/9, a=0.1, g=0.1,
cSD=0.0001, sSD=0.0001,
corr=0.5)
tic <- Sys.time()
for (i in 1:10)
outCS = SIRcovCS(paramsCS, x, 100)
toc <- Sys.time()
toc - tic
tic <- Sys.time()
for (i in 1:10)
outCS = SIRcovCS2(paramsCS, x, 100)
toc <- Sys.time()
toc - tic
R = 8
CV = 5
## baseline parameters
b = 2.5; bs=0.01; d=0.1; c=0.1; s=1/9; a=0.1; g=0.1
## scaling coefficient x to scale c, s, a, and g to achieve particular R value
x = 1/(2*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)) * (-a*bs*R-bs*g*R-2*b*c*s+2*c*d*s+bs*d*R*s+sqrt((a*bs*R+bs*g*R+2*b*c*s-2*c*d*s-bs*d*R*s)^2-4*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)*(a*bs*R+bs*d*R+bs*g*R-b*c*s+c*d*s+a*bs*R*s+bs*d*R*s+bs*g*R*s)))
## simulation parameters
params = c(b=2.5, bs=0.01, d=0.1,
c=(1-x)*0.1, s=(1-x)*1/9, a=(1+x)*0.1, g=(1+x)*0.1,
SD=CV*(1-x)*0.1)
## initial conditions
initial_state <- floor(c(S=unname(((params["b"]-params["d"])/params["bs"]))-5, I=5, R=0))
lapply(1:10, function(i) SIRvarC(params, initial_state, 50)) -> outC
outC[[1]]
outC[[1]][[1]]
outC[[1]][[1]] %>% tail
outC[[1]][[2]] %>% tail
plot(out[[1]][[1]], outC[[1]][[2]][,2], type='l')
plot(outC[[1]][[1]], outC[[1]][[2]][,2], type='l')
outC[[3]]
outC[[3]][,3]
outC[[1]][[3]]
outC[[1]][[3]][,3]
outC[[1]][[3]][,3] %>% range
glm.nb(outC[[1]][[3]][,3]~1)
glm.nb(outC[[1]][[3]][,3]~1)$theta
fitdistr(outC[[1]][[3]][,3])
fitdistr(outC[[1]][[3]][,3], densfun="negative binomial")
outC <- outS <- outA <- outG <- vector(mode='list', length=9)
j = 1
for (R in c(1,4,8)) {
for (CV in c(.2, 1, 5)) {
print(CV)
print(R)
## baseline parameters
b = 2.5; bs=0.01; d=0.1; c=0.1; s=1/9; a=0.1; g=0.1
## scaling coefficient x to scale c, s, a, and g to achieve particular R value
x = 1/(2*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)) * (-a*bs*R-bs*g*R-2*b*c*s+2*c*d*s+bs*d*R*s+sqrt((a*bs*R+bs*g*R+2*b*c*s-2*c*d*s-bs*d*R*s)^2-4*(-b*c*s+c*d*s-a*bs*R*s-bs*g*R*s)*(a*bs*R+bs*d*R+bs*g*R-b*c*s+c*d*s+a*bs*R*s+bs*d*R*s+bs*g*R*s)))
## simulation parameters
params = c(b=2.5, bs=0.01, d=0.1,
c=(1-x)*0.1, s=(1-x)*1/9, a=(1+x)*0.1, g=(1+x)*0.1,
SD=CV*(1-x)*0.1)
## initial conditions
initial_state <- floor(c(S=unname(((params["b"]-params["d"])/params["bs"]))-5, I=5, R=0))
## simulate!
lapply(1:1000, function(i) SIRvarC(params, initial_state, 50)) -> outC[[j]]
lapply(1:1000, function(i) SIRvarS(params, initial_state, 50)) -> outS[[j]]
lapply(1:1000, function(i) SIRvarA(params, initial_state, 50)) -> outA[[j]]
lapply(1:1000, function(i) SIRvarG(params, initial_state, 50)) -> outG[[j]]
j = j+1
}
}
O = outC[[1]]
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.) -> ooo
ooo
o = O[[5]]
o
o[[3]]
o[[3]][is.na(o[[3]][,4]),3]
o[[3]][is.na(o[[3]][,3]),2]
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,3]),2])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.) -> ooo
O
O = outC[[1]]
o = O[[1]]
o = O[[4]]
o = O[[5]]
sum(o[[3]][,4])
o[[3]]
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.) -> ooo
ooo
lapply(outC,
function(O)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.)
) -> OutC
length(OutC)
lapply(outS,
function(O)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.)
) -> OutS
lapply(outA,
function(O)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.)
) -> OutA
lapply(outG,
function(O)
lapply(O,
function(o)
data.frame(peak=max(o[[2]][,2]),
totalI=sum(o[[3]][,3]),
fadeout=ifelse(any(o[[2]][,2]==0),1,0),
fadeoutT=ifelse(any(o[[2]][,2]==0),o[[1]][min(which(o[[2]][,2]==0))],50)) %>%
mutate(., ## compute the dispersion parameter for each run that did not fade out
disp=ifelse(fadeout==0,
ifelse(inherits(try(glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1), silent=TRUE),"try-error"),
NA,
glm.nb((o[[3]][is.na(o[[3]][,4]),3])~1)$theta),
NA))
) %>% do.call("rbind.data.frame",.)
) -> OutG
head(OutG)
OutC %<>% do.call("rbind.data.frame",.)
OutC$R0 <- rep(c(1, 4, 8), each=3000)
OutC$CV <- rep(rep(c(0.2,1,5), each=1000),3)
OutS %<>% do.call("rbind.data.frame",.)
OutS$R0 <- rep(c(1, 4, 8), each=3000)
OutS$CV <- rep(rep(c(0.2,1,5), each=1000),3)
OutA %<>% do.call("rbind.data.frame",.)
OutA$R0 <- rep(c(1, 4, 8), each=3000)
OutA$CV <- rep(rep(c(0.2,1,5), each=1000),3)
OutG %<>% do.call("rbind.data.frame",.)
OutG$R0 <- rep(c(1, 4, 8), each=3000)
OutG$CV <- rep(rep(c(0.2,1,5), each=1000),3)
dim(OutG)
head(OutG)
OutG[990:1010,]
tail(OutG)
tail(OutA)
tail(OutS)
tail(OutC)
ggplot(OutC, aes(y=peak)) + geom_histogram() + facet_grid(R0~CV)
ggplot(OutC, aes(x=peak)) + geom_histogram() + facet_grid(R0~CV)
ggplot(OutC, aes(x=peak)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
paste0("R0=",c(1,4,8))
OutG$R0 <- rep(paste0("R0=",c(1,4,8)), each=3000)
OutG$CV <- rep(paste0("CV=",rep(c(0.2,1,5)), each=1000),3)
OutC$R0 <- rep(paste0("R0=",c(1,4,8)), each=3000)
OutC$CV <- rep(paste0("CV=",rep(c(0.2,1,5)), each=1000),3)
ggplot(OutC, aes(x=peak)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
OutC$CV <- rep(rep(paste0("CV=",c(0.2,1,5)), each=1000),3)
OutC$CV <- rep(rep(paste0("CV=",c(0.2,1,5)), each=1000),3)
ggplot(OutC, aes(x=peak)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
saveRDS(OutC, file="Variance_in_contact_results_12-28-23.RDS")
saveRDS(OutS, file="Variance_in_shedding_results_12-28-23.RDS")
saveRDS(OutC, file="Variance_in_virulence_results_12-28-23.RDS")
saveRDS(OutA, file="Variance_in_virulence_results_12-28-23.RDS")
saveRDS(OutG, file="Variance_in_recovery_results_12-28-23.RDS")
png(file="Variance_in_contact_peaks.png", height=5, width=5, units='in', res=300)
ggplot(OutC, aes(x=peak)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
dev.off()
ggplot(OutC, aes(x=disp)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
OutC$disp
OutC$disp %>% range(., na.rm=T)
filter(OutC, disp > 2)
filter(OutC, disp > 1.5)
filter(OutC, disp > 1)
filter(OutC, disp > 1.5)
ggplot(OutC, aes(x=disp)) + geom_histogram() + facet_grid(R0~CV) + xlim(0,1.5) + theme_bw()
ggplot(OutC, aes(x=disp, group=CV, color=CV)) + geom_histogram() + facet_grid(~R0) + xlim(0,1.5) + theme_bw()
ggplot(OutC, aes(x=disp, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + xlim(0,1.5) + theme_bw()
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(R0~CV) + theme_bw()
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + theme_bw()
ggplot(OutC, aes(x=peak, group=CV, fill=CV, alpha=0.5)) + geom_histogram() + facet_grid(~R0) + theme_bw()
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + theme_bw()
png(file="Variance_in_contact_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + theme_bw()
dev.off()
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + + scale_fill_manual(values=cbPalette)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + + scale_fill_manual(values=cbPalette)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + scale_fill_manual(values=cbPalette)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + scale_fill_manual(values=cbPalette)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + scale_fill_manual(values=cbPalette)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) + geom_histogram() + facet_grid(~R0) + scale_fill_manual(values=cbPalette)
+ theme(legend.position="bottom")
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme(legend.position="bottom")
png(file="Variance_in_contact_peaks.png", height=4, width=5, units='in', res=300)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme(legend.position="bottom")
dev.off()
ggplot(OutC, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme(legend.position="bottom") +
xlim(0,1.5) +
theme_bw()
ggplot(OutC, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
png(file="Variance_in_contact_peaks.png", height=4, width=5, units='in', res=300)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_contact_dispersion.png", height=3, width=5, units='in', res=300)
ggplot(OutC, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
dev.off()
png(file="Variance_in_contact_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutC, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_shedding_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutS, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_shedding_dispersion.png", height=3, width=5, units='in', res=300)
ggplot(OutS, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
dev.off()
OutS$R0 <- rep(paste0("R0=",c(1,4,8)), each=3000)
OutS$CV <- rep(rep(paste0("CV=",c(0.2,1,5)), each=1000),3)
saveRDS(OutS, file="Variance_in_shedding_results_12-28-23.RDS")
ggplot(OutS, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
png(file="Variance_in_shedding_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutS, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_shedding_dispersion.png", height=3, width=5, units='in', res=300)
ggplot(OutS, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
dev.off()
OutA$R0 <- rep(paste0("R0=",c(1,4,8)), each=3000)
OutA$CV <- rep(rep(paste0("CV=",c(0.2,1,5)), each=1000),3)
saveRDS(OutA, file="Variance_in_virulence_results_12-28-23.RDS")
png(file="Variance_in_virulence_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutA, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_virulence_dispersion.png", height=3, width=5, units='in', res=300)
ggplot(OutA, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
dev.off()
OutG$CV <- rep(rep(paste0("CV=",c(0.2,1,5)), each=1000),3)
saveRDS(OutG, file="Variance_in_recovery_results_12-28-23.RDS")
png(file="Variance_in_recovery_peaks.png", height=3, width=5, units='in', res=300)
ggplot(OutG, aes(x=peak, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom")
dev.off()
png(file="Variance_in_recovery_dispersion.png", height=3, width=5, units='in', res=300)
ggplot(OutG, aes(x=disp, group=CV, fill=CV)) +
geom_histogram() +
facet_grid(~R0) +
scale_fill_manual(values=cbPalette) +
theme_bw() +
theme(legend.position="bottom") +
xlim(0,1.5)
dev.off()
